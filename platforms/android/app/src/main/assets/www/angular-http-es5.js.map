{"version":3,"sources":["webpack:///node_modules/@angular/http/__ivy_ngcc__/fesm2015/http.js"],"names":["BrowserXhr","XMLHttpRequest","ɵfac","BrowserXhr_Factory","t","ɵprov","token","factory","ctorParameters","type","RequestMethod","Get","Post","Put","Delete","Options","Head","Patch","ReadyState","Unsent","Open","HeadersReceived","Loading","Done","Cancelled","ResponseType","Basic","Cors","Default","Error","Opaque","ContentType","NONE","JSON","FORM","FORM_DATA","TEXT","BLOB","ARRAY_BUFFER","ResponseContentType","Text","Json","ArrayBuffer","Blob","Headers","headers","_headers","Map","_normalizedNames","forEach","values","name","value","append","Object","keys","Array","isArray","getAll","set","push","lcName","toLowerCase","fn","get","length","has","from","join","mayBeSetNormalizedName","serialized","split","v","headersString","line","index","indexOf","slice","trim","ResponseOptions","opts","body","status","statusText","url","options","BaseResponseOptions","BaseResponseOptions_Factory","ConnectionBackend","Connection","XSRFStrategy","normalizeMethodName","method","toUpperCase","isSuccess","getResponseURL","xhr","responseURL","test","getAllResponseHeaders","getResponseHeader","stringToArrayBuffer","input","view","Uint16Array","i","strLen","charCodeAt","buffer","paramParser","rawParams","map","params","param","eqIdx","key","val","list","QueryEncoder","standardEncoding","encodeURIComponent","replace","URLSearchParams","queryEncoder","paramsMap","clone","appendAll","storedParam","searchParams","paramsList","k","encodeKey","encodeValue","Body","_body","parse","text","encodingHint","toString","String","fromCharCode","apply","Uint8Array","stringify","Response","responseOptions","ok","_nextRequestId","JSONP_HOME","_jsonpConnections","_getJsonpConnections","w","window","BrowserJsonp","node","document","createElement","src","id","connection","connections","appendChild","parentNode","removeChild","BrowserJsonp_Factory","JSONP_ERR_NO_CALLBACK","JSONP_ERR_WRONG_METHOD","JSONPConnection","req","_dom","baseResponseOptions","_finished","TypeError","request","response","responseObserver","readyState","_id","nextRequestID","exposeConnection","callback","requestCallback","lastIndexOf","substring","script","_script","build","onLoad","event","cleanup","merge","error","_responseData","next","complete","onError","message","addEventListener","send","removeEventListener","data","removeConnection","JSONPBackend","_browserJSONP","_baseResponseOptions","JSONPBackend_Factory","XSSI_PREFIX","XHRConnection","browserXHR","_xhr","open","withCredentials","responseText","fromResponseHeaderString","err","setDetectedContentType","setRequestHeader","responseType","getBody","abort","contentType","blob","CookieXSRFStrategy","_cookieName","_headerName","xsrfToken","getCookie","XHRBackend","_browserXHR","_xsrfStrategy","configureRequest","XHRBackend_Factory","RequestOptions","search","_mergeSearchParams","_parseParams","objParams","item","_appendParam","BaseRequestOptions","BaseRequestOptions_Factory","Request","requestOptions","paramsArg","urlEncodeParams","prefix","detectContentType","ArrayBuffer$1","detectContentTypeFromBody","FormData","Blob$1","arrayBuffer","element","noop","httpRequest","backend","createConnection","mergeOptions","defaultOpts","providedOpts","newOptions","Http","_backend","_defaultOptions","responseObservable","Http_Factory","Jsonp","defaultOptions","Jsonp_Factory","_createDefaultCookieXSRFStrategy","httpFactory","xhrBackend","jsonpFactory","jsonpBackend","HttpModule","ɵmod","ɵinj","HttpModule_Factory","providers","provide","useFactory","deps","useClass","args","JsonpModule","JsonpModule_Factory","VERSION"],"mappings":"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","file":"angular-http-es5.js","sourcesContent":["/**\r\n * @license Angular v7.2.16\r\n * (c) 2010-2019 Google LLC. https://angular.io/\r\n * License: MIT\r\n */\r\n\r\nimport { Injectable, NgModule, Version } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ɵgetDOM } from '@angular/platform-browser';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * A backend for http that uses the `XMLHttpRequest` browser API.\r\n *\r\n * Take care not to evaluate this in non-browser contexts.\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * \\@publicApi\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\r\nclass BrowserXhr {\r\n    constructor() { }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    build() { return (/** @type {?} */ ((new XMLHttpRequest()))); }\r\n}\r\nBrowserXhr.ɵfac = function BrowserXhr_Factory(t) { return new (t || BrowserXhr)(); };\r\nBrowserXhr.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BrowserXhr, factory: BrowserXhr.ɵfac });\r\n/** @nocollapse */\r\nBrowserXhr.ctorParameters = () => [];\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrowserXhr, [{\r\n        type: Injectable\r\n    }], function () { return []; }, null); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** @enum {number} */\r\nconst RequestMethod = {\r\n    Get: 0,\r\n    Post: 1,\r\n    Put: 2,\r\n    Delete: 3,\r\n    Options: 4,\r\n    Head: 5,\r\n    Patch: 6,\r\n};\r\nRequestMethod[RequestMethod.Get] = 'Get';\r\nRequestMethod[RequestMethod.Post] = 'Post';\r\nRequestMethod[RequestMethod.Put] = 'Put';\r\nRequestMethod[RequestMethod.Delete] = 'Delete';\r\nRequestMethod[RequestMethod.Options] = 'Options';\r\nRequestMethod[RequestMethod.Head] = 'Head';\r\nRequestMethod[RequestMethod.Patch] = 'Patch';\r\n/** @enum {number} */\r\nconst ReadyState = {\r\n    Unsent: 0,\r\n    Open: 1,\r\n    HeadersReceived: 2,\r\n    Loading: 3,\r\n    Done: 4,\r\n    Cancelled: 5,\r\n};\r\nReadyState[ReadyState.Unsent] = 'Unsent';\r\nReadyState[ReadyState.Open] = 'Open';\r\nReadyState[ReadyState.HeadersReceived] = 'HeadersReceived';\r\nReadyState[ReadyState.Loading] = 'Loading';\r\nReadyState[ReadyState.Done] = 'Done';\r\nReadyState[ReadyState.Cancelled] = 'Cancelled';\r\n/** @enum {number} */\r\nconst ResponseType = {\r\n    Basic: 0,\r\n    Cors: 1,\r\n    Default: 2,\r\n    Error: 3,\r\n    Opaque: 4,\r\n};\r\nResponseType[ResponseType.Basic] = 'Basic';\r\nResponseType[ResponseType.Cors] = 'Cors';\r\nResponseType[ResponseType.Default] = 'Default';\r\nResponseType[ResponseType.Error] = 'Error';\r\nResponseType[ResponseType.Opaque] = 'Opaque';\r\n/** @enum {number} */\r\nconst ContentType = {\r\n    NONE: 0,\r\n    JSON: 1,\r\n    FORM: 2,\r\n    FORM_DATA: 3,\r\n    TEXT: 4,\r\n    BLOB: 5,\r\n    ARRAY_BUFFER: 6,\r\n};\r\nContentType[ContentType.NONE] = 'NONE';\r\nContentType[ContentType.JSON] = 'JSON';\r\nContentType[ContentType.FORM] = 'FORM';\r\nContentType[ContentType.FORM_DATA] = 'FORM_DATA';\r\nContentType[ContentType.TEXT] = 'TEXT';\r\nContentType[ContentType.BLOB] = 'BLOB';\r\nContentType[ContentType.ARRAY_BUFFER] = 'ARRAY_BUFFER';\r\n/** @enum {number} */\r\nconst ResponseContentType = {\r\n    Text: 0,\r\n    Json: 1,\r\n    ArrayBuffer: 2,\r\n    Blob: 3,\r\n};\r\nResponseContentType[ResponseContentType.Text] = 'Text';\r\nResponseContentType[ResponseContentType.Json] = 'Json';\r\nResponseContentType[ResponseContentType.ArrayBuffer] = 'ArrayBuffer';\r\nResponseContentType[ResponseContentType.Blob] = 'Blob';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\r\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\r\n *\r\n * The only known difference between this `Headers` implementation and the spec is the\r\n * lack of an `entries` method.\r\n *\r\n * \\@usageNotes\r\n * ### Example\r\n *\r\n * ```\r\n * import {Headers} from '\\@angular/http';\r\n *\r\n * var firstHeaders = new Headers();\r\n * firstHeaders.append('Content-Type', 'image/jpeg');\r\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\r\n *\r\n * // Create headers from Plain Old JavaScript Object\r\n * var secondHeaders = new Headers({\r\n *   'X-My-Custom-Header': 'Angular'\r\n * });\r\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\r\n *\r\n * var thirdHeaders = new Headers(secondHeaders);\r\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\r\n * ```\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * \\@publicApi\r\n */\r\nclass Headers {\r\n    // TODO(vicb): any -> string|string[]\r\n    /**\r\n     * @param {?=} headers\r\n     */\r\n    constructor(headers) {\r\n        /**\r\n         * \\@internal header names are lower case\r\n         */\r\n        this._headers = new Map();\r\n        /**\r\n         * \\@internal map lower case names to actual names\r\n         */\r\n        this._normalizedNames = new Map();\r\n        if (!headers) {\r\n            return;\r\n        }\r\n        if (headers instanceof Headers) {\r\n            headers.forEach((values, name) => {\r\n                values.forEach(value => this.append(name, value));\r\n            });\r\n            return;\r\n        }\r\n        Object.keys(headers).forEach((name) => {\r\n            /** @type {?} */\r\n            const values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\r\n            this.delete(name);\r\n            values.forEach(value => this.append(name, value));\r\n        });\r\n    }\r\n    /**\r\n     * Returns a new Headers instance from the given DOMString of Response Headers\r\n     * @param {?} headersString\r\n     * @return {?}\r\n     */\r\n    static fromResponseHeaderString(headersString) {\r\n        /** @type {?} */\r\n        const headers = new Headers();\r\n        headersString.split('\\n').forEach(line => {\r\n            /** @type {?} */\r\n            const index = line.indexOf(':');\r\n            if (index > 0) {\r\n                /** @type {?} */\r\n                const name = line.slice(0, index);\r\n                /** @type {?} */\r\n                const value = line.slice(index + 1).trim();\r\n                headers.set(name, value);\r\n            }\r\n        });\r\n        return headers;\r\n    }\r\n    /**\r\n     * Appends a header to existing list of header values for a given header name.\r\n     * @param {?} name\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    append(name, value) {\r\n        /** @type {?} */\r\n        const values = this.getAll(name);\r\n        if (values === null) {\r\n            this.set(name, value);\r\n        }\r\n        else {\r\n            values.push(value);\r\n        }\r\n    }\r\n    /**\r\n     * Deletes all header values for the given name.\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    delete(name) {\r\n        /** @type {?} */\r\n        const lcName = name.toLowerCase();\r\n        this._normalizedNames.delete(lcName);\r\n        this._headers.delete(lcName);\r\n    }\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    forEach(fn) {\r\n        this._headers.forEach((values, lcName) => fn(values, this._normalizedNames.get(lcName), this._headers));\r\n    }\r\n    /**\r\n     * Returns first header that matches given name.\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    get(name) {\r\n        /** @type {?} */\r\n        const values = this.getAll(name);\r\n        if (values === null) {\r\n            return null;\r\n        }\r\n        return values.length > 0 ? values[0] : null;\r\n    }\r\n    /**\r\n     * Checks for existence of header by given name.\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    has(name) { return this._headers.has(name.toLowerCase()); }\r\n    /**\r\n     * Returns the names of the headers\r\n     * @return {?}\r\n     */\r\n    keys() { return Array.from(this._normalizedNames.values()); }\r\n    /**\r\n     * Sets or overrides header value for given name.\r\n     * @param {?} name\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set(name, value) {\r\n        if (Array.isArray(value)) {\r\n            if (value.length) {\r\n                this._headers.set(name.toLowerCase(), [value.join(',')]);\r\n            }\r\n        }\r\n        else {\r\n            this._headers.set(name.toLowerCase(), [value]);\r\n        }\r\n        this.mayBeSetNormalizedName(name);\r\n    }\r\n    /**\r\n     * Returns values of all headers.\r\n     * @return {?}\r\n     */\r\n    values() { return Array.from(this._headers.values()); }\r\n    /**\r\n     * Returns string of all headers.\r\n     * @return {?}\r\n     */\r\n    // TODO(vicb): returns {[name: string]: string[]}\r\n    toJSON() {\r\n        /** @type {?} */\r\n        const serialized = {};\r\n        this._headers.forEach((values, name) => {\r\n            /** @type {?} */\r\n            const split = [];\r\n            values.forEach(v => split.push(...v.split(',')));\r\n            serialized[(/** @type {?} */ (this._normalizedNames.get(name)))] = split;\r\n        });\r\n        return serialized;\r\n    }\r\n    /**\r\n     * Returns list of header values for a given name.\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    getAll(name) {\r\n        return this.has(name) ? this._headers.get(name.toLowerCase()) || null : null;\r\n    }\r\n    /**\r\n     * This method is not implemented.\r\n     * @return {?}\r\n     */\r\n    entries() { throw new Error('\"entries\" method is not implemented on Headers class'); }\r\n    /**\r\n     * @private\r\n     * @param {?} name\r\n     * @return {?}\r\n     */\r\n    mayBeSetNormalizedName(name) {\r\n        /** @type {?} */\r\n        const lcName = name.toLowerCase();\r\n        if (!this._normalizedNames.has(lcName)) {\r\n            this._normalizedNames.set(lcName, name);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Creates a response options object to be optionally provided when instantiating a\r\n * {\\@link Response}.\r\n *\r\n * This class is based on the `ResponseInit` description in the [Fetch\r\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\r\n *\r\n * All values are null by default. Typical defaults can be found in the\r\n * {\\@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\r\n *\r\n * This class may be used in tests to build {\\@link Response Responses} for\r\n * mock responses (see {\\@link MockBackend}).\r\n *\r\n * \\@usageNotes\r\n * ### Example\r\n *\r\n * ```typescript\r\n * import {ResponseOptions, Response} from '\\@angular/http';\r\n *\r\n * var options = new ResponseOptions({\r\n *   body: '{\"name\":\"Jeff\"}'\r\n * });\r\n * var res = new Response(options);\r\n *\r\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\r\n * ```\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * \\@publicApi\r\n */\r\nclass ResponseOptions {\r\n    /**\r\n     * @param {?=} opts\r\n     */\r\n    constructor(opts = {}) {\r\n        const { body, status, headers, statusText, type, url } = opts;\r\n        this.body = body != null ? body : null;\r\n        this.status = status != null ? status : null;\r\n        this.headers = headers != null ? headers : null;\r\n        this.statusText = statusText != null ? statusText : null;\r\n        this.type = type != null ? type : null;\r\n        this.url = url != null ? url : null;\r\n    }\r\n    /**\r\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\r\n     * override\r\n     * existing values. This method will not change the values of the instance on which it is being\r\n     * called.\r\n     *\r\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\r\n     * where certain properties may change from test to test.\r\n     *\r\n     * \\@usageNotes\r\n     * ### Example\r\n     *\r\n     * ```typescript\r\n     * import {ResponseOptions, Response} from '\\@angular/http';\r\n     *\r\n     * var options = new ResponseOptions({\r\n     *   body: {name: 'Jeff'}\r\n     * });\r\n     * var res = new Response(options.merge({\r\n     *   url: 'https://google.com'\r\n     * }));\r\n     * console.log('options.url:', options.url); // null\r\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\r\n     * console.log('res.url:', res.url); // https://google.com\r\n     * ```\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    merge(options) {\r\n        return new ResponseOptions({\r\n            body: options && options.body != null ? options.body : this.body,\r\n            status: options && options.status != null ? options.status : this.status,\r\n            headers: options && options.headers != null ? options.headers : this.headers,\r\n            statusText: options && options.statusText != null ? options.statusText : this.statusText,\r\n            type: options && options.type != null ? options.type : this.type,\r\n            url: options && options.url != null ? options.url : this.url,\r\n        });\r\n    }\r\n}\r\n/**\r\n * Subclass of {\\@link ResponseOptions}, with default values.\r\n *\r\n * Default values:\r\n *  * status: 200\r\n *  * headers: empty {\\@link Headers} object\r\n *\r\n * This class could be extended and bound to the {\\@link ResponseOptions} class\r\n * when configuring an {\\@link Injector}, in order to override the default options\r\n * used by {\\@link Http} to create {\\@link Response Responses}.\r\n *\r\n * \\@usageNotes\r\n * ### Example\r\n *\r\n * ```typescript\r\n * import {provide} from '\\@angular/core';\r\n * import {bootstrap} from '\\@angular/platform-browser/browser';\r\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\r\n * '\\@angular/http';\r\n * import {App} from './myapp';\r\n *\r\n * class MyOptions extends BaseResponseOptions {\r\n *   headers:Headers = new Headers({network: 'github'});\r\n * }\r\n *\r\n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\r\n * ```\r\n *\r\n * The options could also be extended when manually creating a {\\@link Response}\r\n * object.\r\n *\r\n * ### Example\r\n *\r\n * ```\r\n * import {BaseResponseOptions, Response} from '\\@angular/http';\r\n *\r\n * var options = new BaseResponseOptions();\r\n * var res = new Response(options.merge({\r\n *   body: 'Angular',\r\n *   headers: new Headers({framework: 'angular'})\r\n * }));\r\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\r\n * console.log('res.text():', res.text()); // Angular;\r\n * ```\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * \\@publicApi\r\n */\r\nclass BaseResponseOptions extends ResponseOptions {\r\n    constructor() {\r\n        super({ status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers() });\r\n    }\r\n}\r\nBaseResponseOptions.ɵfac = function BaseResponseOptions_Factory(t) { return new (t || BaseResponseOptions)(); };\r\nBaseResponseOptions.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BaseResponseOptions, factory: BaseResponseOptions.ɵfac });\r\n/** @nocollapse */\r\nBaseResponseOptions.ctorParameters = () => [];\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BaseResponseOptions, [{\r\n        type: Injectable\r\n    }], function () { return []; }, null); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * Abstract class from which real backends are derived.\r\n *\r\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\r\n * {\\@link Request}.\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * \\@publicApi\r\n * @abstract\r\n */\r\nclass ConnectionBackend {\r\n}\r\n/**\r\n * Abstract class from which real connections are derived.\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * \\@publicApi\r\n * @abstract\r\n */\r\nclass Connection {\r\n}\r\n/**\r\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * \\@publicApi\r\n * @abstract\r\n */\r\nclass XSRFStrategy {\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @param {?} method\r\n * @return {?}\r\n */\r\nfunction normalizeMethodName(method) {\r\n    if (typeof method !== 'string')\r\n        return method;\r\n    switch (method.toUpperCase()) {\r\n        case 'GET':\r\n            return RequestMethod.Get;\r\n        case 'POST':\r\n            return RequestMethod.Post;\r\n        case 'PUT':\r\n            return RequestMethod.Put;\r\n        case 'DELETE':\r\n            return RequestMethod.Delete;\r\n        case 'OPTIONS':\r\n            return RequestMethod.Options;\r\n        case 'HEAD':\r\n            return RequestMethod.Head;\r\n        case 'PATCH':\r\n            return RequestMethod.Patch;\r\n    }\r\n    throw new Error(`Invalid request method. The method \"${method}\" is not supported.`);\r\n}\r\n/** @type {?} */\r\nconst isSuccess = (status) => (status >= 200 && status < 300);\r\n/**\r\n * @param {?} xhr\r\n * @return {?}\r\n */\r\nfunction getResponseURL(xhr) {\r\n    if ('responseURL' in xhr) {\r\n        return xhr.responseURL;\r\n    }\r\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\r\n        return xhr.getResponseHeader('X-Request-URL');\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @param {?} input\r\n * @return {?}\r\n */\r\nfunction stringToArrayBuffer(input) {\r\n    /** @type {?} */\r\n    const view = new Uint16Array(input.length);\r\n    for (let i = 0, strLen = input.length; i < strLen; i++) {\r\n        view[i] = input.charCodeAt(i);\r\n    }\r\n    return view.buffer;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @param {?=} rawParams\r\n * @return {?}\r\n */\r\nfunction paramParser(rawParams = '') {\r\n    /** @type {?} */\r\n    const map = new Map();\r\n    if (rawParams.length > 0) {\r\n        /** @type {?} */\r\n        const params = rawParams.split('&');\r\n        params.forEach((param) => {\r\n            /** @type {?} */\r\n            const eqIdx = param.indexOf('=');\r\n            const [key, val] = eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)];\r\n            /** @type {?} */\r\n            const list = map.get(key) || [];\r\n            list.push(val);\r\n            map.set(key, list);\r\n        });\r\n    }\r\n    return map;\r\n}\r\n/**\r\n * @deprecated see https://angular.io/guide/http\r\n * \\@publicApi\r\n *\r\n */\r\nclass QueryEncoder {\r\n    /**\r\n     * @param {?} key\r\n     * @return {?}\r\n     */\r\n    encodeKey(key) { return standardEncoding(key); }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    encodeValue(value) { return standardEncoding(value); }\r\n}\r\n/**\r\n * @param {?} v\r\n * @return {?}\r\n */\r\nfunction standardEncoding(v) {\r\n    return encodeURIComponent(v)\r\n        .replace(/%40/gi, '@')\r\n        .replace(/%3A/gi, ':')\r\n        .replace(/%24/gi, '$')\r\n        .replace(/%2C/gi, ',')\r\n        .replace(/%3B/gi, ';')\r\n        .replace(/%2B/gi, '+')\r\n        .replace(/%3D/gi, '=')\r\n        .replace(/%3F/gi, '?')\r\n        .replace(/%2F/gi, '/');\r\n}\r\n/**\r\n * Map-like representation of url search parameters, based on\r\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\r\n * with several extensions for merging URLSearchParams objects:\r\n *   - setAll()\r\n *   - appendAll()\r\n *   - replaceAll()\r\n *\r\n * This class accepts an optional second parameter of ${\\@link QueryEncoder},\r\n * which is used to serialize parameters before making a request. By default,\r\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\r\n * and then un-encodes certain characters that are allowed to be part of the query\r\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\r\n *\r\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\r\n *\r\n * If the set of allowed query characters is not acceptable for a particular backend,\r\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\r\n *\r\n * ```\r\n * import {URLSearchParams, QueryEncoder} from '\\@angular/http';\r\n * class MyQueryEncoder extends QueryEncoder {\r\n *   encodeKey(k: string): string {\r\n *     return myEncodingFunction(k);\r\n *   }\r\n *\r\n *   encodeValue(v: string): string {\r\n *     return myEncodingFunction(v);\r\n *   }\r\n * }\r\n *\r\n * let params = new URLSearchParams('', new MyQueryEncoder());\r\n * ```\r\n * @deprecated see https://angular.io/guide/http\r\n * \\@publicApi\r\n */\r\nclass URLSearchParams {\r\n    /**\r\n     * @param {?=} rawParams\r\n     * @param {?=} queryEncoder\r\n     */\r\n    constructor(rawParams = '', queryEncoder = new QueryEncoder()) {\r\n        this.rawParams = rawParams;\r\n        this.queryEncoder = queryEncoder;\r\n        this.paramsMap = paramParser(rawParams);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    clone() {\r\n        /** @type {?} */\r\n        const clone = new URLSearchParams('', this.queryEncoder);\r\n        clone.appendAll(this);\r\n        return clone;\r\n    }\r\n    /**\r\n     * @param {?} param\r\n     * @return {?}\r\n     */\r\n    has(param) { return this.paramsMap.has(param); }\r\n    /**\r\n     * @param {?} param\r\n     * @return {?}\r\n     */\r\n    get(param) {\r\n        /** @type {?} */\r\n        const storedParam = this.paramsMap.get(param);\r\n        return Array.isArray(storedParam) ? storedParam[0] : null;\r\n    }\r\n    /**\r\n     * @param {?} param\r\n     * @return {?}\r\n     */\r\n    getAll(param) { return this.paramsMap.get(param) || []; }\r\n    /**\r\n     * @param {?} param\r\n     * @param {?} val\r\n     * @return {?}\r\n     */\r\n    set(param, val) {\r\n        if (val === void 0 || val === null) {\r\n            this.delete(param);\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        const list = this.paramsMap.get(param) || [];\r\n        list.length = 0;\r\n        list.push(val);\r\n        this.paramsMap.set(param, list);\r\n    }\r\n    // A merge operation\r\n    // For each name-values pair in `searchParams`, perform `set(name, values[0])`\r\n    //\r\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4], c=[8], b=[7]\"\r\n    //\r\n    // TODO(@caitp): document this better\r\n    /**\r\n     * @param {?} searchParams\r\n     * @return {?}\r\n     */\r\n    setAll(searchParams) {\r\n        searchParams.paramsMap.forEach((value, param) => {\r\n            /** @type {?} */\r\n            const list = this.paramsMap.get(param) || [];\r\n            list.length = 0;\r\n            list.push(value[0]);\r\n            this.paramsMap.set(param, list);\r\n        });\r\n    }\r\n    /**\r\n     * @param {?} param\r\n     * @param {?} val\r\n     * @return {?}\r\n     */\r\n    append(param, val) {\r\n        if (val === void 0 || val === null)\r\n            return;\r\n        /** @type {?} */\r\n        const list = this.paramsMap.get(param) || [];\r\n        list.push(val);\r\n        this.paramsMap.set(param, list);\r\n    }\r\n    // A merge operation\r\n    // For each name-values pair in `searchParams`, perform `append(name, value)`\r\n    // for each value in `values`.\r\n    //\r\n    // E.g: \"a=[1,2], c=[8]\" + \"a=[3,4], b=[7]\" = \"a=[1,2,3,4], c=[8], b=[7]\"\r\n    //\r\n    // TODO(@caitp): document this better\r\n    /**\r\n     * @param {?} searchParams\r\n     * @return {?}\r\n     */\r\n    appendAll(searchParams) {\r\n        searchParams.paramsMap.forEach((value, param) => {\r\n            /** @type {?} */\r\n            const list = this.paramsMap.get(param) || [];\r\n            for (let i = 0; i < value.length; ++i) {\r\n                list.push(value[i]);\r\n            }\r\n            this.paramsMap.set(param, list);\r\n        });\r\n    }\r\n    // A merge operation\r\n    // For each name-values pair in `searchParams`, perform `delete(name)`,\r\n    // followed by `set(name, values)`\r\n    //\r\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4,5,6], c=[8], b=[7]\"\r\n    //\r\n    // TODO(@caitp): document this better\r\n    /**\r\n     * @param {?} searchParams\r\n     * @return {?}\r\n     */\r\n    replaceAll(searchParams) {\r\n        searchParams.paramsMap.forEach((value, param) => {\r\n            /** @type {?} */\r\n            const list = this.paramsMap.get(param) || [];\r\n            list.length = 0;\r\n            for (let i = 0; i < value.length; ++i) {\r\n                list.push(value[i]);\r\n            }\r\n            this.paramsMap.set(param, list);\r\n        });\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    toString() {\r\n        /** @type {?} */\r\n        const paramsList = [];\r\n        this.paramsMap.forEach((values, k) => {\r\n            values.forEach(v => paramsList.push(this.queryEncoder.encodeKey(k) + '=' + this.queryEncoder.encodeValue(v)));\r\n        });\r\n        return paramsList.join('&');\r\n    }\r\n    /**\r\n     * @param {?} param\r\n     * @return {?}\r\n     */\r\n    delete(param) { this.paramsMap.delete(param); }\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * HTTP request body used by both {\\@link Request} and {\\@link Response}\r\n * https://fetch.spec.whatwg.org/#body\r\n * @abstract\r\n */\r\nclass Body {\r\n    /**\r\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\r\n     * @return {?}\r\n     */\r\n    json() {\r\n        if (typeof this._body === 'string') {\r\n            return JSON.parse((/** @type {?} */ (this._body)));\r\n        }\r\n        if (this._body instanceof ArrayBuffer) {\r\n            return JSON.parse(this.text());\r\n        }\r\n        return this._body;\r\n    }\r\n    /**\r\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\r\n     *\r\n     * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\r\n     * bytes in the buffer will be interpreted. Valid values are:\r\n     *\r\n     * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\r\n     *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\r\n     *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\r\n     *   into consideration. This is the default behavior to avoid breaking apps, but should be\r\n     *   considered deprecated.\r\n     *\r\n     * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\r\n     * @param {?=} encodingHint\r\n     * @return {?}\r\n     */\r\n    text(encodingHint = 'legacy') {\r\n        if (this._body instanceof URLSearchParams) {\r\n            return this._body.toString();\r\n        }\r\n        if (this._body instanceof ArrayBuffer) {\r\n            switch (encodingHint) {\r\n                case 'legacy':\r\n                    return String.fromCharCode.apply(null, new Uint16Array((/** @type {?} */ (this._body))));\r\n                case 'iso-8859':\r\n                    return String.fromCharCode.apply(null, new Uint8Array((/** @type {?} */ (this._body))));\r\n                default:\r\n                    throw new Error(`Invalid value for encodingHint: ${encodingHint}`);\r\n            }\r\n        }\r\n        if (this._body == null) {\r\n            return '';\r\n        }\r\n        if (typeof this._body === 'object') {\r\n            return JSON.stringify(this._body, null, 2);\r\n        }\r\n        return this._body.toString();\r\n    }\r\n    /**\r\n     * Return the body as an ArrayBuffer\r\n     * @return {?}\r\n     */\r\n    arrayBuffer() {\r\n        if (this._body instanceof ArrayBuffer) {\r\n            return (/** @type {?} */ (this._body));\r\n        }\r\n        return stringToArrayBuffer(this.text());\r\n    }\r\n    /**\r\n     * Returns the request's body as a Blob, assuming that body exists.\r\n     * @return {?}\r\n     */\r\n    blob() {\r\n        if (this._body instanceof Blob) {\r\n            return (/** @type {?} */ (this._body));\r\n        }\r\n        if (this._body instanceof ArrayBuffer) {\r\n            return new Blob([this._body]);\r\n        }\r\n        throw new Error('The request body isn\\'t either a blob or an array buffer');\r\n    }\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Creates `Response` instances from provided values.\r\n *\r\n * Though this object isn't\r\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\r\n * add data to a view.\r\n *\r\n * \\@usageNotes\r\n * ### Example\r\n *\r\n * ```\r\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\r\n * ```\r\n *\r\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\r\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\r\n * can be accessed many times. There are other differences in the implementation, but this is the\r\n * most significant.\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * \\@publicApi\r\n */\r\nclass Response extends Body {\r\n    /**\r\n     * @param {?} responseOptions\r\n     */\r\n    constructor(responseOptions) {\r\n        super();\r\n        this._body = responseOptions.body;\r\n        this.status = (/** @type {?} */ (responseOptions.status));\r\n        this.ok = (this.status >= 200 && this.status <= 299);\r\n        this.statusText = responseOptions.statusText;\r\n        this.headers = responseOptions.headers;\r\n        this.type = (/** @type {?} */ (responseOptions.type));\r\n        this.url = (/** @type {?} */ (responseOptions.url));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    toString() {\r\n        return `Response with status: ${this.status} ${this.statusText} for URL: ${this.url}`;\r\n    }\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nlet _nextRequestId = 0;\r\n/** @type {?} */\r\nconst JSONP_HOME = '__ng_jsonp__';\r\n/** @type {?} */\r\nlet _jsonpConnections = null;\r\n/**\r\n * @return {?}\r\n */\r\nfunction _getJsonpConnections() {\r\n    /** @type {?} */\r\n    const w = typeof window == 'object' ? window : {};\r\n    if (_jsonpConnections === null) {\r\n        _jsonpConnections = w[JSONP_HOME] = {};\r\n    }\r\n    return _jsonpConnections;\r\n}\r\n// Make sure not to evaluate this in a non-browser environment!\r\nclass BrowserJsonp {\r\n    // Construct a <script> element with the specified URL\r\n    /**\r\n     * @param {?} url\r\n     * @return {?}\r\n     */\r\n    build(url) {\r\n        /** @type {?} */\r\n        const node = document.createElement('script');\r\n        node.src = url;\r\n        return node;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    nextRequestID() { return `__req${_nextRequestId++}`; }\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    requestCallback(id) { return `${JSONP_HOME}.${id}.finished`; }\r\n    /**\r\n     * @param {?} id\r\n     * @param {?} connection\r\n     * @return {?}\r\n     */\r\n    exposeConnection(id, connection) {\r\n        /** @type {?} */\r\n        const connections = _getJsonpConnections();\r\n        connections[id] = connection;\r\n    }\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    removeConnection(id) {\r\n        /** @type {?} */\r\n        const connections = _getJsonpConnections();\r\n        connections[id] = null;\r\n    }\r\n    // Attach the <script> element to the DOM\r\n    /**\r\n     * @param {?} node\r\n     * @return {?}\r\n     */\r\n    send(node) { document.body.appendChild((/** @type {?} */ ((node)))); }\r\n    // Remove <script> element from the DOM\r\n    /**\r\n     * @param {?} node\r\n     * @return {?}\r\n     */\r\n    cleanup(node) {\r\n        if (node.parentNode) {\r\n            node.parentNode.removeChild((/** @type {?} */ ((node))));\r\n        }\r\n    }\r\n}\r\nBrowserJsonp.ɵfac = function BrowserJsonp_Factory(t) { return new (t || BrowserJsonp)(); };\r\nBrowserJsonp.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BrowserJsonp, factory: BrowserJsonp.ɵfac });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrowserJsonp, [{\r\n        type: Injectable\r\n    }], null, null); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nconst JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\r\n/** @type {?} */\r\nconst JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\r\n/**\r\n * Base class for an in-flight JSONP request.\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * \\@publicApi\r\n */\r\nclass JSONPConnection {\r\n    /**\r\n     * \\@internal\r\n     * @param {?} req\r\n     * @param {?} _dom\r\n     * @param {?=} baseResponseOptions\r\n     */\r\n    constructor(req, _dom, baseResponseOptions) {\r\n        this._dom = _dom;\r\n        this.baseResponseOptions = baseResponseOptions;\r\n        this._finished = false;\r\n        if (req.method !== RequestMethod.Get) {\r\n            throw new TypeError(JSONP_ERR_WRONG_METHOD);\r\n        }\r\n        this.request = req;\r\n        this.response = new Observable((responseObserver) => {\r\n            this.readyState = ReadyState.Loading;\r\n            /** @type {?} */\r\n            const id = this._id = _dom.nextRequestID();\r\n            _dom.exposeConnection(id, this);\r\n            // Workaround Dart\r\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\r\n            /** @type {?} */\r\n            const callback = _dom.requestCallback(this._id);\r\n            /** @type {?} */\r\n            let url = req.url;\r\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\r\n                url = url.replace('=JSONP_CALLBACK&', `=${callback}&`);\r\n            }\r\n            else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\r\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + `=${callback}`;\r\n            }\r\n            /** @type {?} */\r\n            const script = this._script = _dom.build(url);\r\n            /** @type {?} */\r\n            const onLoad = (event) => {\r\n                if (this.readyState === ReadyState.Cancelled)\r\n                    return;\r\n                this.readyState = ReadyState.Done;\r\n                _dom.cleanup(script);\r\n                if (!this._finished) {\r\n                    /** @type {?} */\r\n                    let responseOptions = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url });\r\n                    if (baseResponseOptions) {\r\n                        responseOptions = baseResponseOptions.merge(responseOptions);\r\n                    }\r\n                    responseObserver.error(new Response(responseOptions));\r\n                    return;\r\n                }\r\n                /** @type {?} */\r\n                let responseOptions = new ResponseOptions({ body: this._responseData, url });\r\n                if (this.baseResponseOptions) {\r\n                    responseOptions = this.baseResponseOptions.merge(responseOptions);\r\n                }\r\n                responseObserver.next(new Response(responseOptions));\r\n                responseObserver.complete();\r\n            };\r\n            /** @type {?} */\r\n            const onError = (error) => {\r\n                if (this.readyState === ReadyState.Cancelled)\r\n                    return;\r\n                this.readyState = ReadyState.Done;\r\n                _dom.cleanup(script);\r\n                /** @type {?} */\r\n                let responseOptions = new ResponseOptions({ body: error.message, type: ResponseType.Error });\r\n                if (baseResponseOptions) {\r\n                    responseOptions = baseResponseOptions.merge(responseOptions);\r\n                }\r\n                responseObserver.error(new Response(responseOptions));\r\n            };\r\n            script.addEventListener('load', onLoad);\r\n            script.addEventListener('error', onError);\r\n            _dom.send(script);\r\n            return () => {\r\n                this.readyState = ReadyState.Cancelled;\r\n                script.removeEventListener('load', onLoad);\r\n                script.removeEventListener('error', onError);\r\n                this._dom.cleanup(script);\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * Callback called when the JSONP request completes, to notify the application\r\n     * of the new data.\r\n     * @param {?=} data\r\n     * @return {?}\r\n     */\r\n    finished(data) {\r\n        // Don't leak connections\r\n        this._finished = true;\r\n        this._dom.removeConnection(this._id);\r\n        if (this.readyState === ReadyState.Cancelled)\r\n            return;\r\n        this._responseData = data;\r\n    }\r\n}\r\n/**\r\n * A {\\@link ConnectionBackend} that uses the JSONP strategy of making requests.\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * \\@publicApi\r\n */\r\nclass JSONPBackend extends ConnectionBackend {\r\n    /**\r\n     * \\@internal\r\n     * @param {?} _browserJSONP\r\n     * @param {?} _baseResponseOptions\r\n     */\r\n    constructor(_browserJSONP, _baseResponseOptions) {\r\n        super();\r\n        this._browserJSONP = _browserJSONP;\r\n        this._baseResponseOptions = _baseResponseOptions;\r\n    }\r\n    /**\r\n     * @param {?} request\r\n     * @return {?}\r\n     */\r\n    createConnection(request) {\r\n        return new JSONPConnection(request, this._browserJSONP, this._baseResponseOptions);\r\n    }\r\n}\r\nJSONPBackend.ɵfac = function JSONPBackend_Factory(t) { return new (t || JSONPBackend)(ɵngcc0.ɵɵinject(BrowserJsonp), ɵngcc0.ɵɵinject(ResponseOptions)); };\r\nJSONPBackend.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: JSONPBackend, factory: JSONPBackend.ɵfac });\r\n/** @nocollapse */\r\nJSONPBackend.ctorParameters = () => [\r\n    { type: BrowserJsonp },\r\n    { type: ResponseOptions }\r\n];\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JSONPBackend, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: BrowserJsonp }, { type: ResponseOptions }]; }, null); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\r\n/**\r\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\r\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\r\n * request.\r\n *\r\n * This class would typically not be created or interacted with directly inside applications, though\r\n * the {\\@link MockConnection} may be interacted with in tests.\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * \\@publicApi\r\n */\r\nclass XHRConnection {\r\n    /**\r\n     * @param {?} req\r\n     * @param {?} browserXHR\r\n     * @param {?=} baseResponseOptions\r\n     */\r\n    constructor(req, browserXHR, baseResponseOptions) {\r\n        this.request = req;\r\n        this.response = new Observable((responseObserver) => {\r\n            /** @type {?} */\r\n            const _xhr = browserXHR.build();\r\n            _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\r\n            if (req.withCredentials != null) {\r\n                _xhr.withCredentials = req.withCredentials;\r\n            }\r\n            // load event handler\r\n            /** @type {?} */\r\n            const onLoad = () => {\r\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\r\n                /** @type {?} */\r\n                let status = _xhr.status === 1223 ? 204 : _xhr.status;\r\n                /** @type {?} */\r\n                let body = null;\r\n                // HTTP 204 means no content\r\n                if (status !== 204) {\r\n                    // responseText is the old-school way of retrieving response (supported by IE8 & 9)\r\n                    // response/responseType properties were introduced in ResourceLoader Level2 spec\r\n                    // (supported by IE10)\r\n                    body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\r\n                    // Implicitly strip a potential XSSI prefix.\r\n                    if (typeof body === 'string') {\r\n                        body = body.replace(XSSI_PREFIX, '');\r\n                    }\r\n                }\r\n                // fix status code when it is 0 (0 status is undocumented).\r\n                // Occurs when accessing file resources or on Android 4.1 stock browser\r\n                // while retrieving files from application cache.\r\n                if (status === 0) {\r\n                    status = body ? 200 : 0;\r\n                }\r\n                /** @type {?} */\r\n                const headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\r\n                // IE 9 does not provide the way to get URL of response\r\n                /** @type {?} */\r\n                const url = getResponseURL(_xhr) || req.url;\r\n                /** @type {?} */\r\n                const statusText = _xhr.statusText || 'OK';\r\n                /** @type {?} */\r\n                let responseOptions = new ResponseOptions({ body, status, headers, statusText, url });\r\n                if (baseResponseOptions != null) {\r\n                    responseOptions = baseResponseOptions.merge(responseOptions);\r\n                }\r\n                /** @type {?} */\r\n                const response = new Response(responseOptions);\r\n                response.ok = isSuccess(status);\r\n                if (response.ok) {\r\n                    responseObserver.next(response);\r\n                    // TODO(gdi2290): defer complete if array buffer until done\r\n                    responseObserver.complete();\r\n                    return;\r\n                }\r\n                responseObserver.error(response);\r\n            };\r\n            // error event handler\r\n            /** @type {?} */\r\n            const onError = (err) => {\r\n                /** @type {?} */\r\n                let responseOptions = new ResponseOptions({\r\n                    body: err,\r\n                    type: ResponseType.Error,\r\n                    status: _xhr.status,\r\n                    statusText: _xhr.statusText,\r\n                });\r\n                if (baseResponseOptions != null) {\r\n                    responseOptions = baseResponseOptions.merge(responseOptions);\r\n                }\r\n                responseObserver.error(new Response(responseOptions));\r\n            };\r\n            this.setDetectedContentType(req, _xhr);\r\n            if (req.headers == null) {\r\n                req.headers = new Headers();\r\n            }\r\n            if (!req.headers.has('Accept')) {\r\n                req.headers.append('Accept', 'application/json, text/plain, */*');\r\n            }\r\n            req.headers.forEach((values, name) => _xhr.setRequestHeader((/** @type {?} */ (name)), values.join(',')));\r\n            // Select the correct buffer type to store the response\r\n            if (req.responseType != null && _xhr.responseType != null) {\r\n                switch (req.responseType) {\r\n                    case ResponseContentType.ArrayBuffer:\r\n                        _xhr.responseType = 'arraybuffer';\r\n                        break;\r\n                    case ResponseContentType.Json:\r\n                        _xhr.responseType = 'json';\r\n                        break;\r\n                    case ResponseContentType.Text:\r\n                        _xhr.responseType = 'text';\r\n                        break;\r\n                    case ResponseContentType.Blob:\r\n                        _xhr.responseType = 'blob';\r\n                        break;\r\n                    default:\r\n                        throw new Error('The selected responseType is not supported');\r\n                }\r\n            }\r\n            _xhr.addEventListener('load', onLoad);\r\n            _xhr.addEventListener('error', onError);\r\n            _xhr.send(this.request.getBody());\r\n            return () => {\r\n                _xhr.removeEventListener('load', onLoad);\r\n                _xhr.removeEventListener('error', onError);\r\n                _xhr.abort();\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * @param {?} req\r\n     * @param {?} _xhr\r\n     * @return {?}\r\n     */\r\n    setDetectedContentType(req /** TODO Request */, _xhr /** XMLHttpRequest */) {\r\n        // Skip if a custom Content-Type header is provided\r\n        if (req.headers != null && req.headers.get('Content-Type') != null) {\r\n            return;\r\n        }\r\n        // Set the detected content type\r\n        switch (req.contentType) {\r\n            case ContentType.NONE:\r\n                break;\r\n            case ContentType.JSON:\r\n                _xhr.setRequestHeader('content-type', 'application/json');\r\n                break;\r\n            case ContentType.FORM:\r\n                _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\r\n                break;\r\n            case ContentType.TEXT:\r\n                _xhr.setRequestHeader('content-type', 'text/plain');\r\n                break;\r\n            case ContentType.BLOB:\r\n                /** @type {?} */\r\n                const blob = req.blob();\r\n                if (blob.type) {\r\n                    _xhr.setRequestHeader('content-type', blob.type);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n}\r\n/**\r\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\r\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\r\n * for more information on XSRF.\r\n *\r\n * Applications can configure custom cookie and header names by binding an instance of this class\r\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\r\n * details.\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * \\@publicApi\r\n */\r\nclass CookieXSRFStrategy {\r\n    /**\r\n     * @param {?=} _cookieName\r\n     * @param {?=} _headerName\r\n     */\r\n    constructor(_cookieName = 'XSRF-TOKEN', _headerName = 'X-XSRF-TOKEN') {\r\n        this._cookieName = _cookieName;\r\n        this._headerName = _headerName;\r\n    }\r\n    /**\r\n     * @param {?} req\r\n     * @return {?}\r\n     */\r\n    configureRequest(req) {\r\n        /** @type {?} */\r\n        const xsrfToken = ɵgetDOM().getCookie(this._cookieName);\r\n        if (xsrfToken) {\r\n            req.headers.set(this._headerName, xsrfToken);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Creates {\\@link XHRConnection} instances.\r\n *\r\n * This class would typically not be used by end users, but could be\r\n * overridden if a different backend implementation should be used,\r\n * such as in a node backend.\r\n *\r\n * \\@usageNotes\r\n * ### Example\r\n *\r\n * ```\r\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '\\@angular/http';\r\n * \\@Component({\r\n *   viewProviders: [\r\n *     HTTP_PROVIDERS,\r\n *     {provide: Http, useFactory: (backend, options) => {\r\n *       return new Http(backend, options);\r\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\r\n * })\r\n * class MyComponent {\r\n *   constructor(http:Http) {\r\n *     http.request('people.json').subscribe(res => this.people = res.json());\r\n *   }\r\n * }\r\n * ```\r\n * @deprecated see https://angular.io/guide/http\r\n * \\@publicApi\r\n */\r\nclass XHRBackend {\r\n    /**\r\n     * @param {?} _browserXHR\r\n     * @param {?} _baseResponseOptions\r\n     * @param {?} _xsrfStrategy\r\n     */\r\n    constructor(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\r\n        this._browserXHR = _browserXHR;\r\n        this._baseResponseOptions = _baseResponseOptions;\r\n        this._xsrfStrategy = _xsrfStrategy;\r\n    }\r\n    /**\r\n     * @param {?} request\r\n     * @return {?}\r\n     */\r\n    createConnection(request) {\r\n        this._xsrfStrategy.configureRequest(request);\r\n        return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\r\n    }\r\n}\r\nXHRBackend.ɵfac = function XHRBackend_Factory(t) { return new (t || XHRBackend)(ɵngcc0.ɵɵinject(BrowserXhr), ɵngcc0.ɵɵinject(ResponseOptions), ɵngcc0.ɵɵinject(XSRFStrategy)); };\r\nXHRBackend.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: XHRBackend, factory: XHRBackend.ɵfac });\r\n/** @nocollapse */\r\nXHRBackend.ctorParameters = () => [\r\n    { type: BrowserXhr },\r\n    { type: ResponseOptions },\r\n    { type: XSRFStrategy }\r\n];\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(XHRBackend, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: BrowserXhr }, { type: ResponseOptions }, { type: XSRFStrategy }]; }, null); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Creates a request options object to be optionally provided when instantiating a\r\n * {\\@link Request}.\r\n *\r\n * This class is based on the `RequestInit` description in the [Fetch\r\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\r\n *\r\n * All values are null by default. Typical defaults can be found in the {\\@link BaseRequestOptions}\r\n * class, which sub-classes `RequestOptions`.\r\n *\r\n * ```typescript\r\n * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\r\n *\r\n * const options = new RequestOptions({\r\n *   method: RequestMethod.Post,\r\n *   url: 'https://google.com'\r\n * });\r\n * const req = new Request(options);\r\n * console.log('req.method:', RequestMethod[req.method]); // Post\r\n * console.log('options.url:', options.url); // https://google.com\r\n * ```\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * \\@publicApi\r\n */\r\nclass RequestOptions {\r\n    /**\r\n     * @deprecated from 4.0.0. Use params instead.\r\n     * @return {?}\r\n     */\r\n    get search() { return this.params; }\r\n    /**\r\n     * @deprecated from 4.0.0. Use params instead.\r\n     * @param {?} params\r\n     * @return {?}\r\n     */\r\n    set search(params) { this.params = params; }\r\n    // TODO(Dzmitry): remove search when this.search is removed\r\n    /**\r\n     * @param {?=} opts\r\n     */\r\n    constructor(opts = {}) {\r\n        const { method, headers, body, url, search, params, withCredentials, responseType } = opts;\r\n        this.method = method != null ? normalizeMethodName(method) : null;\r\n        this.headers = headers != null ? headers : null;\r\n        this.body = body != null ? body : null;\r\n        this.url = url != null ? url : null;\r\n        this.params = this._mergeSearchParams(params || search);\r\n        this.withCredentials = withCredentials != null ? withCredentials : null;\r\n        this.responseType = responseType != null ? responseType : null;\r\n    }\r\n    /**\r\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\r\n     * existing values. This method will not change the values of the instance on which it is being\r\n     * called.\r\n     *\r\n     * Note that `headers` and `search` will override existing values completely if present in\r\n     * the `options` object. If these values should be merged, it should be done prior to calling\r\n     * `merge` on the `RequestOptions` instance.\r\n     *\r\n     * ```typescript\r\n     * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\r\n     *\r\n     * const options = new RequestOptions({\r\n     *   method: RequestMethod.Post\r\n     * });\r\n     * const req = new Request(options.merge({\r\n     *   url: 'https://google.com'\r\n     * }));\r\n     * console.log('req.method:', RequestMethod[req.method]); // Post\r\n     * console.log('options.url:', options.url); // null\r\n     * console.log('req.url:', req.url); // https://google.com\r\n     * ```\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    merge(options) {\r\n        return new RequestOptions({\r\n            method: options && options.method != null ? options.method : this.method,\r\n            headers: options && options.headers != null ? options.headers : new Headers(this.headers),\r\n            body: options && options.body != null ? options.body : this.body,\r\n            url: options && options.url != null ? options.url : this.url,\r\n            params: options && this._mergeSearchParams(options.params || options.search),\r\n            withCredentials: options && options.withCredentials != null ? options.withCredentials :\r\n                this.withCredentials,\r\n            responseType: options && options.responseType != null ? options.responseType :\r\n                this.responseType\r\n        });\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?=} params\r\n     * @return {?}\r\n     */\r\n    _mergeSearchParams(params) {\r\n        if (!params)\r\n            return this.params;\r\n        if (params instanceof URLSearchParams) {\r\n            return params.clone();\r\n        }\r\n        if (typeof params === 'string') {\r\n            return new URLSearchParams(params);\r\n        }\r\n        return this._parseParams(params);\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?=} objParams\r\n     * @return {?}\r\n     */\r\n    _parseParams(objParams = {}) {\r\n        /** @type {?} */\r\n        const params = new URLSearchParams();\r\n        Object.keys(objParams).forEach((key) => {\r\n            /** @type {?} */\r\n            const value = objParams[key];\r\n            if (Array.isArray(value)) {\r\n                value.forEach((item) => this._appendParam(key, item, params));\r\n            }\r\n            else {\r\n                this._appendParam(key, value, params);\r\n            }\r\n        });\r\n        return params;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} key\r\n     * @param {?} value\r\n     * @param {?} params\r\n     * @return {?}\r\n     */\r\n    _appendParam(key, value, params) {\r\n        if (typeof value !== 'string') {\r\n            value = JSON.stringify(value);\r\n        }\r\n        params.append(key, value);\r\n    }\r\n}\r\n/**\r\n * Subclass of {\\@link RequestOptions}, with default values.\r\n *\r\n * Default values:\r\n *  * method: {\\@link RequestMethod RequestMethod.Get}\r\n *  * headers: empty {\\@link Headers} object\r\n *\r\n * This class could be extended and bound to the {\\@link RequestOptions} class\r\n * when configuring an {\\@link Injector}, in order to override the default options\r\n * used by {\\@link Http} to create and send {\\@link Request Requests}.\r\n *\r\n * ```typescript\r\n * import {BaseRequestOptions, RequestOptions} from '\\@angular/http';\r\n *\r\n * class MyOptions extends BaseRequestOptions {\r\n *   search: string = 'coreTeam=true';\r\n * }\r\n *\r\n * {provide: RequestOptions, useClass: MyOptions};\r\n * ```\r\n *\r\n * The options could also be extended when manually creating a {\\@link Request}\r\n * object.\r\n *\r\n * ```\r\n * import {BaseRequestOptions, Request, RequestMethod} from '\\@angular/http';\r\n *\r\n * const options = new BaseRequestOptions();\r\n * const req = new Request(options.merge({\r\n *   method: RequestMethod.Post,\r\n *   url: 'https://google.com'\r\n * }));\r\n * console.log('req.method:', RequestMethod[req.method]); // Post\r\n * console.log('options.url:', options.url); // null\r\n * console.log('req.url:', req.url); // https://google.com\r\n * ```\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * \\@publicApi\r\n */\r\nclass BaseRequestOptions extends RequestOptions {\r\n    constructor() { super({ method: RequestMethod.Get, headers: new Headers() }); }\r\n}\r\nBaseRequestOptions.ɵfac = function BaseRequestOptions_Factory(t) { return new (t || BaseRequestOptions)(); };\r\nBaseRequestOptions.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BaseRequestOptions, factory: BaseRequestOptions.ɵfac });\r\n/** @nocollapse */\r\nBaseRequestOptions.ctorParameters = () => [];\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BaseRequestOptions, [{\r\n        type: Injectable\r\n    }], function () { return []; }, null); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n// TODO(jeffbcross): properly implement body accessors\r\n/**\r\n * Creates `Request` instances from provided values.\r\n *\r\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\r\n * Spec](https://fetch.spec.whatwg.org/#request-class),\r\n * but is considered a static value whose body can be accessed many times. There are other\r\n * differences in the implementation, but this is the most significant.\r\n *\r\n * `Request` instances are typically created by higher-level classes, like {\\@link Http} and\r\n * {\\@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\r\n * One such example is when creating services that wrap higher-level services, like {\\@link Http},\r\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\r\n *\r\n * ```typescript\r\n * import {Injectable, Injector} from '\\@angular/core';\r\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '\\@angular/http';\r\n *\r\n * \\@Injectable()\r\n * class AutoAuthenticator {\r\n *   constructor(public http:Http) {}\r\n *   request(url:string) {\r\n *     return this.http.request(new Request({\r\n *       method: RequestMethod.Get,\r\n *       url: url,\r\n *       search: 'password=123'\r\n *     }));\r\n *   }\r\n * }\r\n *\r\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\r\n * var authenticator = injector.get(AutoAuthenticator);\r\n * authenticator.request('people.json').subscribe(res => {\r\n *   //URL should have included '?password=123'\r\n *   console.log('people', res.json());\r\n * });\r\n * ```\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * \\@publicApi\r\n */\r\nclass Request extends Body {\r\n    /**\r\n     * @param {?} requestOptions\r\n     */\r\n    constructor(requestOptions) {\r\n        super();\r\n        // TODO: assert that url is present\r\n        /** @type {?} */\r\n        const url = requestOptions.url;\r\n        this.url = (/** @type {?} */ (requestOptions.url));\r\n        /** @type {?} */\r\n        const paramsArg = requestOptions.params || requestOptions.search;\r\n        if (paramsArg) {\r\n            /** @type {?} */\r\n            let params;\r\n            if (typeof paramsArg === 'object' && !(paramsArg instanceof URLSearchParams)) {\r\n                params = urlEncodeParams(paramsArg).toString();\r\n            }\r\n            else {\r\n                params = paramsArg.toString();\r\n            }\r\n            if (params.length > 0) {\r\n                /** @type {?} */\r\n                let prefix = '?';\r\n                if (this.url.indexOf('?') != -1) {\r\n                    prefix = (this.url[this.url.length - 1] == '&') ? '' : '&';\r\n                }\r\n                // TODO: just delete search-query-looking string in url?\r\n                this.url = url + prefix + params;\r\n            }\r\n        }\r\n        this._body = requestOptions.body;\r\n        this.method = normalizeMethodName((/** @type {?} */ (requestOptions.method)));\r\n        // TODO(jeffbcross): implement behavior\r\n        // Defaults to 'omit', consistent with browser\r\n        this.headers = new Headers(requestOptions.headers);\r\n        this.contentType = this.detectContentType();\r\n        this.withCredentials = (/** @type {?} */ (requestOptions.withCredentials));\r\n        this.responseType = (/** @type {?} */ (requestOptions.responseType));\r\n    }\r\n    /**\r\n     * Returns the content type enum based on header options.\r\n     * @return {?}\r\n     */\r\n    detectContentType() {\r\n        switch (this.headers.get('content-type')) {\r\n            case 'application/json':\r\n                return ContentType.JSON;\r\n            case 'application/x-www-form-urlencoded':\r\n                return ContentType.FORM;\r\n            case 'multipart/form-data':\r\n                return ContentType.FORM_DATA;\r\n            case 'text/plain':\r\n            case 'text/html':\r\n                return ContentType.TEXT;\r\n            case 'application/octet-stream':\r\n                return this._body instanceof ArrayBuffer$1 ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\r\n            default:\r\n                return this.detectContentTypeFromBody();\r\n        }\r\n    }\r\n    /**\r\n     * Returns the content type of request's body based on its type.\r\n     * @return {?}\r\n     */\r\n    detectContentTypeFromBody() {\r\n        if (this._body == null) {\r\n            return ContentType.NONE;\r\n        }\r\n        else if (this._body instanceof URLSearchParams) {\r\n            return ContentType.FORM;\r\n        }\r\n        else if (this._body instanceof FormData) {\r\n            return ContentType.FORM_DATA;\r\n        }\r\n        else if (this._body instanceof Blob$1) {\r\n            return ContentType.BLOB;\r\n        }\r\n        else if (this._body instanceof ArrayBuffer$1) {\r\n            return ContentType.ARRAY_BUFFER;\r\n        }\r\n        else if (this._body && typeof this._body === 'object') {\r\n            return ContentType.JSON;\r\n        }\r\n        else {\r\n            return ContentType.TEXT;\r\n        }\r\n    }\r\n    /**\r\n     * Returns the request's body according to its type. If body is undefined, return\r\n     * null.\r\n     * @return {?}\r\n     */\r\n    getBody() {\r\n        switch (this.contentType) {\r\n            case ContentType.JSON:\r\n                return this.text();\r\n            case ContentType.FORM:\r\n                return this.text();\r\n            case ContentType.FORM_DATA:\r\n                return this._body;\r\n            case ContentType.TEXT:\r\n                return this.text();\r\n            case ContentType.BLOB:\r\n                return this.blob();\r\n            case ContentType.ARRAY_BUFFER:\r\n                return this.arrayBuffer();\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @param {?} params\r\n * @return {?}\r\n */\r\nfunction urlEncodeParams(params) {\r\n    /** @type {?} */\r\n    const searchParams = new URLSearchParams();\r\n    Object.keys(params).forEach(key => {\r\n        /** @type {?} */\r\n        const value = params[key];\r\n        if (value && Array.isArray(value)) {\r\n            value.forEach(element => searchParams.append(key, element.toString()));\r\n        }\r\n        else {\r\n            searchParams.append(key, value.toString());\r\n        }\r\n    });\r\n    return searchParams;\r\n}\r\n/** @type {?} */\r\nconst noop = function () { };\r\n/** @type {?} */\r\nconst w = typeof window == 'object' ? window : noop;\r\n/** @type {?} */\r\nconst FormData = ((/** @type {?} */ (w)))['FormData'] || noop;\r\n/** @type {?} */\r\nconst Blob$1 = ((/** @type {?} */ (w)))['Blob'] || noop;\r\n/** @type {?} */\r\nconst ArrayBuffer$1 = ((/** @type {?} */ (w)))['ArrayBuffer'] || noop;\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @param {?} backend\r\n * @param {?} request\r\n * @return {?}\r\n */\r\nfunction httpRequest(backend, request) {\r\n    return backend.createConnection(request).response;\r\n}\r\n/**\r\n * @param {?} defaultOpts\r\n * @param {?} providedOpts\r\n * @param {?} method\r\n * @param {?} url\r\n * @return {?}\r\n */\r\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\r\n    /** @type {?} */\r\n    const newOptions = defaultOpts;\r\n    if (providedOpts) {\r\n        // Hack so Dart can used named parameters\r\n        return (/** @type {?} */ (newOptions.merge(new RequestOptions({\r\n            method: providedOpts.method || method,\r\n            url: providedOpts.url || url,\r\n            search: providedOpts.search,\r\n            params: providedOpts.params,\r\n            headers: providedOpts.headers,\r\n            body: providedOpts.body,\r\n            withCredentials: providedOpts.withCredentials,\r\n            responseType: providedOpts.responseType\r\n        }))));\r\n    }\r\n    return (/** @type {?} */ (newOptions.merge(new RequestOptions({ method, url }))));\r\n}\r\n/**\r\n * Performs http requests using `XMLHttpRequest` as the default backend.\r\n *\r\n * `Http` is available as an injectable class, with methods to perform http requests. Calling\r\n * `request` returns an `Observable` which will emit a single {\\@link Response} when a\r\n * response is received.\r\n *\r\n * \\@usageNotes\r\n * ### Example\r\n *\r\n * ```typescript\r\n * import {Http, HTTP_PROVIDERS} from '\\@angular/http';\r\n * import {map} from 'rxjs/operators';\r\n *\r\n * \\@Component({\r\n *   selector: 'http-app',\r\n *   viewProviders: [HTTP_PROVIDERS],\r\n *   templateUrl: 'people.html'\r\n * })\r\n * class PeopleComponent {\r\n *   constructor(http: Http) {\r\n *     http.get('people.json')\r\n *       // Call map on the response observable to get the parsed people object\r\n *       .pipe(map(res => res.json()))\r\n *       // Subscribe to the observable to get the parsed people object and attach it to the\r\n *       // component\r\n *       .subscribe(people => this.people = people);\r\n *   }\r\n * }\r\n * ```\r\n *\r\n *\r\n * ### Example\r\n *\r\n * ```\r\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\r\n * ```\r\n *\r\n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\r\n * {\\@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\r\n * the {\\@link XHRBackend} provider, as in the following example:\r\n *\r\n * ### Example\r\n *\r\n * ```typescript\r\n * import {BaseRequestOptions, Http} from '\\@angular/http';\r\n * import {MockBackend} from '\\@angular/http/testing';\r\n * var injector = Injector.resolveAndCreate([\r\n *   BaseRequestOptions,\r\n *   MockBackend,\r\n *   {provide: Http, useFactory:\r\n *       function(backend, defaultOptions) {\r\n *         return new Http(backend, defaultOptions);\r\n *       },\r\n *       deps: [MockBackend, BaseRequestOptions]}\r\n * ]);\r\n * var http = injector.get(Http);\r\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\r\n * ```\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * \\@publicApi\r\n */\r\nclass Http {\r\n    /**\r\n     * @param {?} _backend\r\n     * @param {?} _defaultOptions\r\n     */\r\n    constructor(_backend, _defaultOptions) {\r\n        this._backend = _backend;\r\n        this._defaultOptions = _defaultOptions;\r\n    }\r\n    /**\r\n     * Performs any type of http request. First argument is required, and can either be a url or\r\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\r\n     * object can be provided as the 2nd argument. The options object will be merged with the values\r\n     * of {\\@link BaseRequestOptions} before performing the request.\r\n     * @param {?} url\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    request(url, options) {\r\n        /** @type {?} */\r\n        let responseObservable;\r\n        if (typeof url === 'string') {\r\n            responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, (/** @type {?} */ (url)))));\r\n        }\r\n        else if (url instanceof Request) {\r\n            responseObservable = httpRequest(this._backend, url);\r\n        }\r\n        else {\r\n            throw new Error('First argument must be a url string or Request instance.');\r\n        }\r\n        return responseObservable;\r\n    }\r\n    /**\r\n     * Performs a request with `get` http method.\r\n     * @param {?} url\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    get(url, options) {\r\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\r\n    }\r\n    /**\r\n     * Performs a request with `post` http method.\r\n     * @param {?} url\r\n     * @param {?} body\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    post(url, body, options) {\r\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Post, url)));\r\n    }\r\n    /**\r\n     * Performs a request with `put` http method.\r\n     * @param {?} url\r\n     * @param {?} body\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    put(url, body, options) {\r\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Put, url)));\r\n    }\r\n    /**\r\n     * Performs a request with `delete` http method.\r\n     * @param {?} url\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    delete(url, options) {\r\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\r\n    }\r\n    /**\r\n     * Performs a request with `patch` http method.\r\n     * @param {?} url\r\n     * @param {?} body\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    patch(url, body, options) {\r\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Patch, url)));\r\n    }\r\n    /**\r\n     * Performs a request with `head` http method.\r\n     * @param {?} url\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    head(url, options) {\r\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\r\n    }\r\n    /**\r\n     * Performs a request with `options` http method.\r\n     * @param {?} url\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    options(url, options) {\r\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Options, url)));\r\n    }\r\n}\r\nHttp.ɵfac = function Http_Factory(t) { return new (t || Http)(ɵngcc0.ɵɵinject(ConnectionBackend), ɵngcc0.ɵɵinject(RequestOptions)); };\r\nHttp.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Http, factory: Http.ɵfac });\r\n/** @nocollapse */\r\nHttp.ctorParameters = () => [\r\n    { type: ConnectionBackend },\r\n    { type: RequestOptions }\r\n];\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Http, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: ConnectionBackend }, { type: RequestOptions }]; }, null); })();\r\n/**\r\n * @deprecated see https://angular.io/guide/http\r\n * \\@publicApi\r\n */\r\nclass Jsonp extends Http {\r\n    /**\r\n     * @param {?} backend\r\n     * @param {?} defaultOptions\r\n     */\r\n    constructor(backend, defaultOptions) {\r\n        super(backend, defaultOptions);\r\n    }\r\n    /**\r\n     * Performs any type of http request. First argument is required, and can either be a url or\r\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\r\n     * object can be provided as the 2nd argument. The options object will be merged with the values\r\n     * of {\\@link BaseRequestOptions} before performing the request.\r\n     *\r\n     * \\@security Regular XHR is the safest alternative to JSONP for most applications, and is\r\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\r\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\r\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\r\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\r\n     * future security issues (e.g. content sniffing).  For more detail, see the\r\n     * [Security Guide](http://g.co/ng/security).\r\n     * @param {?} url\r\n     * @param {?=} options\r\n     * @return {?}\r\n     */\r\n    request(url, options) {\r\n        /** @type {?} */\r\n        let responseObservable;\r\n        if (typeof url === 'string') {\r\n            url =\r\n                new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, (/** @type {?} */ (url))));\r\n        }\r\n        if (url instanceof Request) {\r\n            if (url.method !== RequestMethod.Get) {\r\n                throw new Error('JSONP requests must use GET request method.');\r\n            }\r\n            responseObservable = httpRequest(this._backend, url);\r\n        }\r\n        else {\r\n            throw new Error('First argument must be a url string or Request instance.');\r\n        }\r\n        return responseObservable;\r\n    }\r\n}\r\nJsonp.ɵfac = function Jsonp_Factory(t) { return new (t || Jsonp)(ɵngcc0.ɵɵinject(ConnectionBackend), ɵngcc0.ɵɵinject(RequestOptions)); };\r\nJsonp.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Jsonp, factory: Jsonp.ɵfac });\r\n/** @nocollapse */\r\nJsonp.ctorParameters = () => [\r\n    { type: ConnectionBackend },\r\n    { type: RequestOptions }\r\n];\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Jsonp, [{\r\n        type: Injectable\r\n    }], function () { return [{ type: ConnectionBackend }, { type: RequestOptions }]; }, null); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @return {?}\r\n */\r\nfunction _createDefaultCookieXSRFStrategy() {\r\n    return new CookieXSRFStrategy();\r\n}\r\n/**\r\n * @param {?} xhrBackend\r\n * @param {?} requestOptions\r\n * @return {?}\r\n */\r\nfunction httpFactory(xhrBackend, requestOptions) {\r\n    return new Http(xhrBackend, requestOptions);\r\n}\r\n/**\r\n * @param {?} jsonpBackend\r\n * @param {?} requestOptions\r\n * @return {?}\r\n */\r\nfunction jsonpFactory(jsonpBackend, requestOptions) {\r\n    return new Jsonp(jsonpBackend, requestOptions);\r\n}\r\n/**\r\n * The module that includes http's providers\r\n *\r\n * @deprecated see https://angular.io/guide/http\r\n * \\@publicApi\r\n */\r\nclass HttpModule {\r\n}\r\nHttpModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HttpModule });\r\nHttpModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HttpModule_Factory(t) { return new (t || HttpModule)(); }, providers: [\r\n        // TODO(pascal): use factory type annotations once supported in DI\r\n        // issue: https://github.com/angular/angular/issues/3183\r\n        { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\r\n        BrowserXhr,\r\n        { provide: RequestOptions, useClass: BaseRequestOptions },\r\n        { provide: ResponseOptions, useClass: BaseResponseOptions },\r\n        XHRBackend,\r\n        { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\r\n    ] });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                providers: [\r\n                    // TODO(pascal): use factory type annotations once supported in DI\r\n                    // issue: https://github.com/angular/angular/issues/3183\r\n                    { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\r\n                    BrowserXhr,\r\n                    { provide: RequestOptions, useClass: BaseRequestOptions },\r\n                    { provide: ResponseOptions, useClass: BaseResponseOptions },\r\n                    XHRBackend,\r\n                    { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\r\n                ]\r\n            }]\r\n    }], null, null); })();\r\n/**\r\n * The module that includes jsonp's providers\r\n *\r\n * @deprecated see https://angular.io/api/common/http/HttpClient#jsonp\r\n * \\@publicApi\r\n */\r\nclass JsonpModule {\r\n}\r\nJsonpModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: JsonpModule });\r\nJsonpModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function JsonpModule_Factory(t) { return new (t || JsonpModule)(); }, providers: [\r\n        // TODO(pascal): use factory type annotations once supported in DI\r\n        // issue: https://github.com/angular/angular/issues/3183\r\n        { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\r\n        BrowserJsonp,\r\n        { provide: RequestOptions, useClass: BaseRequestOptions },\r\n        { provide: ResponseOptions, useClass: BaseResponseOptions },\r\n        JSONPBackend,\r\n    ] });\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JsonpModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                providers: [\r\n                    // TODO(pascal): use factory type annotations once supported in DI\r\n                    // issue: https://github.com/angular/angular/issues/3183\r\n                    { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\r\n                    BrowserJsonp,\r\n                    { provide: RequestOptions, useClass: BaseRequestOptions },\r\n                    { provide: ResponseOptions, useClass: BaseResponseOptions },\r\n                    JSONPBackend,\r\n                ]\r\n            }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @deprecated see https://angular.io/guide/http\r\n * \\@publicApi\r\n * @type {?}\r\n */\r\nconst VERSION = new Version('7.2.16');\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { BrowserJsonp as ɵangular_packages_http_http_e, Body as ɵangular_packages_http_http_f, _createDefaultCookieXSRFStrategy as ɵangular_packages_http_http_a, httpFactory as ɵangular_packages_http_http_b, jsonpFactory as ɵangular_packages_http_http_c, BrowserXhr, JSONPBackend, JSONPConnection, CookieXSRFStrategy, XHRBackend, XHRConnection, BaseRequestOptions, RequestOptions, BaseResponseOptions, ResponseOptions, ReadyState, RequestMethod, ResponseContentType, ResponseType, Headers, Http, Jsonp, HttpModule, JsonpModule, Connection, ConnectionBackend, XSRFStrategy, Request, Response, QueryEncoder, URLSearchParams, VERSION };\r\n\r\n//# sourceMappingURL=http.js.map"]}
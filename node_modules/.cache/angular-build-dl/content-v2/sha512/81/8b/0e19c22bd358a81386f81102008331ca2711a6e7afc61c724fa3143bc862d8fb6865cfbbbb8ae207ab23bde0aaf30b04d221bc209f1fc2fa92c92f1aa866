{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-textarea.entry.js"],"names":["textareaIosCss","textareaMdCss","Textarea","hostRef","ionChange","ionInput","ionStyle","ionBlur","ionFocus","inputId","textareaIds","didBlurAfterEdit","fireFocusEvents","hasFocus","autocapitalize","autofocus","clearOnEdit","debounce","disabled","name","readonly","required","spellcheck","autoGrow","value","onInput","ev","nativeInput","emitStyle","emit","onFocus","focusChange","onBlur","onKeyDown","checkClearOnEdit","getValue","runAutoGrow","debounceChanged","document","dispatchEvent","CustomEvent","detail","el","style","height","scrollHeight","textareaWrapper","focus","blur","Promise","resolve","placeholder","hasValue","mode","labelId","label","id","color","ref","autoCapitalize","autoFocus","enterKeyHint","enterkeyhint","inputMode","inputmode","maxLength","maxlength","minLength","minlength","readOnly","cols","rows","wrap","ios","md"],"mappings":"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","file":"39-es5.js","sourcesContent":["import { r as registerInstance, e as createEvent, f as readTask, h, H as Host, i as getElement } from './index-92848855.js';\r\nimport { b as getIonMode } from './ionic-global-23e7365a.js';\r\nimport { d as debounceEvent, r as raf, f as findItemLabel } from './helpers-5c745fbd.js';\r\nimport { c as createColorClasses } from './theme-5641d27f.js';\r\n\r\nconst textareaIosCss = \".sc-ion-textarea-ios-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);white-space:pre-wrap;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}.ion-color.sc-ion-textarea-ios-h{background:initial}.ion-color.sc-ion-textarea-ios-h{color:var(--ion-color-base)}ion-item.sc-ion-textarea-ios-h,ion-item .sc-ion-textarea-ios-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-ios-h:not(.item-label),ion-item:not(.item-label) .sc-ion-textarea-ios-h{--padding-start:0}.textarea-wrapper.sc-ion-textarea-ios{min-width:inherit;max-width:inherit;min-height:inherit;max-height:inherit}.native-textarea.sc-ion-textarea-ios{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-textarea.sc-ion-textarea-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-ios::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-ios{opacity:0.4}.cloned-input.sc-ion-textarea-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-ios .cloned-input.sc-ion-textarea-ios,[dir=rtl].sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios,[dir=rtl] .sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios{left:unset;right:unset;right:0}.sc-ion-textarea-ios-h{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-stacked.sc-ion-textarea-ios-h,.item-label-stacked .sc-ion-textarea-ios-h,.item-label-floating.sc-ion-textarea-ios-h,.item-label-floating .sc-ion-textarea-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}\";\r\n\r\nconst textareaMdCss = \".sc-ion-textarea-md-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);white-space:pre-wrap;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}.ion-color.sc-ion-textarea-md-h{background:initial}.ion-color.sc-ion-textarea-md-h{color:var(--ion-color-base)}ion-item.sc-ion-textarea-md-h,ion-item .sc-ion-textarea-md-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-md-h:not(.item-label),ion-item:not(.item-label) .sc-ion-textarea-md-h{--padding-start:0}.textarea-wrapper.sc-ion-textarea-md{min-width:inherit;max-width:inherit;min-height:inherit;max-height:inherit}.native-textarea.sc-ion-textarea-md{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-textarea.sc-ion-textarea-md{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-md::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-md{opacity:0.4}.cloned-input.sc-ion-textarea-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-md .cloned-input.sc-ion-textarea-md,[dir=rtl].sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md,[dir=rtl] .sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md{left:unset;right:unset;right:0}.sc-ion-textarea-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:11px;--padding-start:8px;margin-left:0;margin-right:0;margin-top:8px;margin-bottom:0;font-size:inherit}.item-label-stacked.sc-ion-textarea-md-h,.item-label-stacked .sc-ion-textarea-md-h,.item-label-floating.sc-ion-textarea-md-h,.item-label-floating .sc-ion-textarea-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}\";\r\n\r\nconst Textarea = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.ionChange = createEvent(this, \"ionChange\", 7);\r\n        this.ionInput = createEvent(this, \"ionInput\", 7);\r\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\r\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\r\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\r\n        this.inputId = `ion-textarea-${textareaIds++}`;\r\n        this.didBlurAfterEdit = false;\r\n        /**\r\n         * This is required for a WebKit bug which requires us to\r\n         * blur and focus an input to properly focus the input in\r\n         * an item with delegatesFocus. It will no longer be needed\r\n         * with iOS 14.\r\n         *\r\n         * @internal\r\n         */\r\n        this.fireFocusEvents = true;\r\n        this.hasFocus = false;\r\n        /**\r\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\r\n         */\r\n        this.autocapitalize = 'none';\r\n        /**\r\n         * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\r\n         */\r\n        this.autofocus = false;\r\n        /**\r\n         * If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.\r\n         */\r\n        this.clearOnEdit = false;\r\n        /**\r\n         * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\r\n         */\r\n        this.debounce = 0;\r\n        /**\r\n         * If `true`, the user cannot interact with the textarea.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * The name of the control, which is submitted with the form data.\r\n         */\r\n        this.name = this.inputId;\r\n        /**\r\n         * If `true`, the user cannot modify the value.\r\n         */\r\n        this.readonly = false;\r\n        /**\r\n         * If `true`, the user must fill in a value before submitting a form.\r\n         */\r\n        this.required = false;\r\n        /**\r\n         * If `true`, the element will have its spelling and grammar checked.\r\n         */\r\n        this.spellcheck = false;\r\n        /**\r\n         * If `true`, the element height will increase based on the value.\r\n         */\r\n        this.autoGrow = false;\r\n        /**\r\n         * The value of the textarea.\r\n         */\r\n        this.value = '';\r\n        this.onInput = (ev) => {\r\n            if (this.nativeInput) {\r\n                this.value = this.nativeInput.value;\r\n            }\r\n            this.emitStyle();\r\n            this.ionInput.emit(ev);\r\n        };\r\n        this.onFocus = (ev) => {\r\n            this.hasFocus = true;\r\n            this.focusChange();\r\n            if (this.fireFocusEvents) {\r\n                this.ionFocus.emit(ev);\r\n            }\r\n        };\r\n        this.onBlur = (ev) => {\r\n            this.hasFocus = false;\r\n            this.focusChange();\r\n            if (this.fireFocusEvents) {\r\n                this.ionBlur.emit(ev);\r\n            }\r\n        };\r\n        this.onKeyDown = () => {\r\n            this.checkClearOnEdit();\r\n        };\r\n    }\r\n    debounceChanged() {\r\n        this.ionChange = debounceEvent(this.ionChange, this.debounce);\r\n    }\r\n    disabledChanged() {\r\n        this.emitStyle();\r\n    }\r\n    /**\r\n     * Update the native input element when the value changes\r\n     */\r\n    valueChanged() {\r\n        const nativeInput = this.nativeInput;\r\n        const value = this.getValue();\r\n        if (nativeInput && nativeInput.value !== value) {\r\n            nativeInput.value = value;\r\n        }\r\n        this.runAutoGrow();\r\n        this.emitStyle();\r\n        this.ionChange.emit({ value });\r\n    }\r\n    connectedCallback() {\r\n        this.emitStyle();\r\n        this.debounceChanged();\r\n        {\r\n            document.dispatchEvent(new CustomEvent('ionInputDidLoad', {\r\n                detail: this.el\r\n            }));\r\n        }\r\n    }\r\n    disconnectedCallback() {\r\n        {\r\n            document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\r\n                detail: this.el\r\n            }));\r\n        }\r\n    }\r\n    componentDidLoad() {\r\n        raf(() => this.runAutoGrow());\r\n    }\r\n    runAutoGrow() {\r\n        const nativeInput = this.nativeInput;\r\n        if (nativeInput && this.autoGrow) {\r\n            readTask(() => {\r\n                nativeInput.style.height = 'auto';\r\n                nativeInput.style.height = nativeInput.scrollHeight + 'px';\r\n                if (this.textareaWrapper) {\r\n                    this.textareaWrapper.style.height = nativeInput.scrollHeight + 'px';\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Sets focus on the native `textarea` in `ion-textarea`. Use this method instead of the global\r\n     * `textarea.focus()`.\r\n     */\r\n    async setFocus() {\r\n        if (this.nativeInput) {\r\n            this.nativeInput.focus();\r\n        }\r\n    }\r\n    /**\r\n     * Sets blur on the native `textarea` in `ion-textarea`. Use this method instead of the global\r\n     * `textarea.blur()`.\r\n     * @internal\r\n     */\r\n    async setBlur() {\r\n        if (this.nativeInput) {\r\n            this.nativeInput.blur();\r\n        }\r\n    }\r\n    /**\r\n     * Returns the native `<textarea>` element used under the hood.\r\n     */\r\n    getInputElement() {\r\n        return Promise.resolve(this.nativeInput);\r\n    }\r\n    emitStyle() {\r\n        this.ionStyle.emit({\r\n            'interactive': true,\r\n            'textarea': true,\r\n            'input': true,\r\n            'interactive-disabled': this.disabled,\r\n            'has-placeholder': this.placeholder != null,\r\n            'has-value': this.hasValue(),\r\n            'has-focus': this.hasFocus\r\n        });\r\n    }\r\n    /**\r\n     * Check if we need to clear the text input if clearOnEdit is enabled\r\n     */\r\n    checkClearOnEdit() {\r\n        if (!this.clearOnEdit) {\r\n            return;\r\n        }\r\n        // Did the input value change after it was blurred and edited?\r\n        if (this.didBlurAfterEdit && this.hasValue()) {\r\n            // Clear the input\r\n            this.value = '';\r\n        }\r\n        // Reset the flag\r\n        this.didBlurAfterEdit = false;\r\n    }\r\n    focusChange() {\r\n        // If clearOnEdit is enabled and the input blurred but has a value, set a flag\r\n        if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\r\n            this.didBlurAfterEdit = true;\r\n        }\r\n        this.emitStyle();\r\n    }\r\n    hasValue() {\r\n        return this.getValue() !== '';\r\n    }\r\n    getValue() {\r\n        return this.value || '';\r\n    }\r\n    render() {\r\n        const mode = getIonMode(this);\r\n        const value = this.getValue();\r\n        const labelId = this.inputId + '-lbl';\r\n        const label = findItemLabel(this.el);\r\n        if (label) {\r\n            label.id = labelId;\r\n        }\r\n        return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: createColorClasses(this.color, {\r\n                [mode]: true,\r\n            }) }, h(\"div\", { class: \"textarea-wrapper\", ref: el => this.textareaWrapper = el }, h(\"textarea\", { class: \"native-textarea\", \"aria-labelledby\": labelId, ref: el => this.nativeInput = el, autoCapitalize: this.autocapitalize, autoFocus: this.autofocus, enterKeyHint: this.enterkeyhint, inputMode: this.inputmode, disabled: this.disabled, maxLength: this.maxlength, minLength: this.minlength, name: this.name, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellcheck: this.spellcheck, cols: this.cols, rows: this.rows, wrap: this.wrap, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeyDown }, value))));\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get watchers() { return {\r\n        \"debounce\": [\"debounceChanged\"],\r\n        \"disabled\": [\"disabledChanged\"],\r\n        \"value\": [\"valueChanged\"]\r\n    }; }\r\n};\r\nlet textareaIds = 0;\r\nTextarea.style = {\r\n    ios: textareaIosCss,\r\n    md: textareaMdCss\r\n};\r\n\r\nexport { Textarea as ion_textarea };\r\n"]}
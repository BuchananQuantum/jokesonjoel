{"version":3,"sources":["webpack:///src/app/MyListing/categoriesList/categoriesList.html","webpack:///src/app/MyListing/categoriesList/categoriesList.module.ts","webpack:///src/app/MyListing/categoriesList/categoriesList.scss","webpack:///src/app/MyListing/categoriesList/categoriesList.ts"],"names":["CategoriesListModule","imports","forChild","path","component","declarations","CategoriesList","service","mlservice","_sanitizer","translate","locationService","navController","GlobalFields","GlobalFieldsMyListing","tabShown","loading","listOfTypes","categories_by_type","regions_by_type","getCategoriesForEachType","getRegionsForEachType","site_details","categoryListTabContent","console","log","setWhiteBlackBackgroundStatusBar","selectedCat","typeId","clearFilters","filtersSearch","categories","name","selectedType","selectListingTypeDetail","getFilteredListingFirstTime","navigateForward","themeEnabled","getCountByTaxonomy","subscribe","res","success","data","length","forEach","type","push","type_id","id","type_name","title","terms","err","regions","selectedReg","region","category","image","listingCategories","cat","image_url","bypassSecurityTrustStyle","placeholderImgUrl","reg","class_to_add","class_name","imageAttributes","element","value","selector","template"],"mappings":"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","file":"MyListing-categoriesList-categoriesList-module-es5.js","sourcesContent":["export default \"\\r\\n<ion-header translucent=\\\"true\\\" dir=\\\"{{GlobalFields.getLanguageLayout()}}\\\">\\r\\n    <ion-toolbar>\\r\\n      <!-- If Side menu is used-->\\r\\n      <ion-buttons *ngIf=\\\"GlobalFields.site_details.navigationType==2\\\" slot=\\\"start\\\" style=\\\"position: absolute;\\\">\\r\\n        <ion-menu-button style=\\\"color: #3b3c3c\\\"></ion-menu-button>\\r\\n      </ion-buttons>\\r\\n      <ion-segment *ngIf=\\\"!GlobalFields.site_details.categoryListTabContent || GlobalFields.site_details.categoryListTabContent == 3\\\" [(ngModel)]=\\\"tabShown\\\" style=\\\"width: 50%; min-width: fit-content; margin: auto;\\\">\\r\\n          <ion-segment-button value=\\\"1\\\">\\r\\n              <ion-label>{{'CATEGORIES' | translate}}</ion-label>\\r\\n          </ion-segment-button>\\r\\n          <ion-segment-button value=\\\"2\\\">\\r\\n              <ion-label>{{'REGIONS' | translate}}</ion-label>\\r\\n          </ion-segment-button>\\r\\n      </ion-segment>\\r\\n      <ion-title *ngIf=\\\"GlobalFields.site_details.categoryListTabContent ==1 || GlobalFields.site_details.categoryListTabContent == 2\\\">\\r\\n        <span *ngIf=\\\"GlobalFields.site_details.categoryListTabContent == 1\\\">{{'CATEGORIES' | translate}}</span>\\r\\n        <span *ngIf=\\\"GlobalFields.site_details.categoryListTabContent == 2\\\">{{'REGIONS' | translate}}</span>\\r\\n      </ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n\\r\\n<!-- Categories -->\\r\\n<ion-content class=\\\"cards-bg social-cards\\\" *ngIf=\\\"tabShown==1 && GlobalFieldsMyListing.listingCategories\\\" style=\\\"margin-top: 20px;\\\"\\r\\n             [ngStyle]=\\\"GlobalFields.getBodyColorBackgroundJson()\\\" dir=\\\"{{GlobalFields.getLanguageLayout()}}\\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <!-- Loading animation-->\\r\\n  <div *ngIf=\\\"loading\\\">\\r\\n    <ion-list>\\r\\n      <ion-list-header>\\r\\n        <ion-label><ion-skeleton-text animated style=\\\"width: 50%\\\"></ion-skeleton-text></ion-label>\\r\\n      </ion-list-header>\\r\\n      <ion-item *ngFor=\\\"let item of [1,2,3,4,5,6,7,8,9,10]\\\">\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <ion-skeleton-text animated></ion-skeleton-text>\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <ion-skeleton-text animated style=\\\"width: 80%\\\"></ion-skeleton-text>\\r\\n          <ion-skeleton-text animated style=\\\"width: 50%\\\"></ion-skeleton-text>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n  </div>\\r\\n\\r\\n    <div *ngFor=\\\"let type of categories_by_type\\\" style=\\\"width: 100%; padding: 15px;\\\">\\r\\n        <h3 *ngIf=\\\"type.categories && type.categories.length>0\\\">{{type.type_name}}</h3>\\r\\n      <span *ngFor=\\\"let cat of type.categories\\\">\\r\\n        <ion-row *ngIf=\\\"cat.count\\\"  style=\\\"width: 100%; height: 130px;\\\"\\r\\n                 (click)=\\\"getListingsByCategory(cat, type.type_id)\\\">\\r\\n            <ion-col style=\\\"text-align: center\\\">\\r\\n                <!--<div class=\\\"backImg\\\" [style.background]=\\\"getBackground(cat)\\\">-->\\r\\n                <div class=\\\"backImg\\\">\\r\\n                    <img-loader [src]=\\\"getBackgroundCached(cat)\\\" useImg\\r\\n                                [imgAttributes]=\\\"getImgCachedClass('shadedImgCached categoryImgCached')\\\"></img-loader>\\r\\n\\r\\n                    <div class=\\\"text\\\">\\r\\n                        <span class=\\\"categoryBox\\\">{{cat.name}}</span>\\r\\n                        <br>\\r\\n                        <span style=\\\"position: relative; top: 24%;\\\">{{cat.count}} {{'LISTINGS' | translate}}</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n      </span>\\r\\n    </div>\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<!-- Regions -->\\r\\n<ion-content class=\\\"cards-bg social-cards\\\" *ngIf=\\\"tabShown==2 && GlobalFieldsMyListing.regions\\\" style=\\\"margin-top: 20px;\\\"\\r\\n             [ngStyle]=\\\"GlobalFields.getBodyColorBackgroundJson()\\\" dir=\\\"{{GlobalFields.getLanguageLayout()}}\\\">\\r\\n\\r\\n\\r\\n    <div style=\\\"width: 100%; padding: 15px;\\\" *ngIf=\\\"regions_by_type && regions_by_type.length>0\\\">\\r\\n      <div *ngFor=\\\"let type of regions_by_type\\\">\\r\\n        <h3 *ngIf=\\\"type.regions && type.regions.length>0\\\">{{type.type_name}}</h3>\\r\\n        <span *ngFor=\\\"let reg of type.regions\\\">\\r\\n          <ion-row *ngIf=\\\"reg.count\\\" style=\\\"width: 100%; height: 130px;\\\"\\r\\n                   (click)=\\\"getListingsByRegion(reg, type.type_id)\\\">\\r\\n              <ion-col style=\\\"text-align: center\\\">\\r\\n                  <!--<div class=\\\"backImg\\\" [style.background]=\\\"getBackground(cat)\\\">-->\\r\\n                  <div class=\\\"backImg\\\">\\r\\n                      <img-loader [src]=\\\"getBackgroundCachedRegions(reg)\\\" useImg\\r\\n                                  [imgAttributes]=\\\"getImgCachedClass('shadedImgCached categoryImgCached')\\\"></img-loader>\\r\\n                      <div class=\\\"text\\\">\\r\\n                          <span class=\\\"categoryBox\\\">{{reg.name}}</span>\\r\\n                          <br>\\r\\n                          <span style=\\\"position: relative; top: 24%;\\\">{{reg.count}} {{'LISTINGS' | translate}}</span>\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </ion-col>\\r\\n          </ion-row>\\r\\n        </span>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</ion-content>\\r\\n\";","import { CommonModule } from '@angular/common';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport {NgModule} from \"@angular/core\";\r\nimport {SharedModule} from '../../shared.module';\r\nimport {CategoriesList} from './categoriesList';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        IonicModule,\r\n        SharedModule,\r\n        RouterModule.forChild([\r\n            {\r\n                path: '',\r\n                component: CategoriesList\r\n            }\r\n        ])\r\n    ],\r\n    declarations: [CategoriesList]\r\n})\r\nexport class CategoriesListModule {}\r\n","export default \".backImg {\\n  height: 110px;\\n  width: 100%;\\n  background-position: center !important;\\n  background-size: cover !important;\\n  border-radius: 5px;\\n  -webkit-box-shadow: 0 4px 8px rgba(0, 0, 0, 0.18);\\n  margin-bottom: 5px;\\n  margin-top: 5px;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.18);\\n  display: inline-flex;\\n  background-color: black;\\n  position: relative;\\n  overflow: hidden;\\n  overflow-y: hidden;\\n}\\n\\n.text {\\n  text-align: center;\\n  width: 100%;\\n  color: white;\\n  position: absolute;\\n  left: 50%;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%) translateX(-50%);\\n}\\n\\n.categoryBox {\\n  font-weight: 900;\\n  font-size: 18pt;\\n  position: relative;\\n  top: 22%;\\n  line-height: 1;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvTXlMaXN0aW5nL2NhdGVnb3JpZXNMaXN0L0M6XFxqb2tlc29uam9lbFxcam9rZXNvbmpvZWwvc3JjXFxhcHBcXE15TGlzdGluZ1xcY2F0ZWdvcmllc0xpc3RcXGNhdGVnb3JpZXNMaXN0LnNjc3MiLCJzcmMvYXBwL015TGlzdGluZy9jYXRlZ29yaWVzTGlzdC9jYXRlZ29yaWVzTGlzdC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLFdBQUE7RUFDQSxzQ0FBQTtFQUNBLGlDQUFBO0VBQ0Esa0JBQUE7RUFDQSxpREFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLHlDQUFBO0VBQ0Esb0JBQUE7RUFDQSx1QkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtBQ0NGOztBREVBO0VBQ0Usa0JBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLFFBQUE7RUFDQSxvREFBQTtBQ0NGOztBREVBO0VBQ0UsZ0JBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7RUFDQSxRQUFBO0VBQ0EsY0FBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvTXlMaXN0aW5nL2NhdGVnb3JpZXNMaXN0L2NhdGVnb3JpZXNMaXN0LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYmFja0ltZ3tcclxuICBoZWlnaHQ6IDExMHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciAhaW1wb3J0YW50O1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXIgIWltcG9ydGFudDtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjE4KTtcclxuICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgbWFyZ2luLXRvcDogNXB4O1xyXG4gIGJveC1zaGFkb3c6IDAgNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMTgpO1xyXG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIG92ZXJmbG93LXk6IGhpZGRlbjtcclxufVxyXG5cclxuLnRleHR7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgbGVmdDogNTAlO1xyXG4gIHRvcDogNTAlO1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpIHRyYW5zbGF0ZVgoLTUwJSk7XHJcbn1cclxuXHJcbi5jYXRlZ29yeUJveHtcclxuICBmb250LXdlaWdodDogOTAwO1xyXG4gIGZvbnQtc2l6ZTogMThwdDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgdG9wOiAyMiU7XHJcbiAgbGluZS1oZWlnaHQ6IDE7XHJcbn1cclxuIiwiLmJhY2tJbWcge1xuICBoZWlnaHQ6IDExMHB4O1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyICFpbXBvcnRhbnQ7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXIgIWltcG9ydGFudDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAtd2Via2l0LWJveC1zaGFkb3c6IDAgNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMTgpO1xuICBtYXJnaW4tYm90dG9tOiA1cHg7XG4gIG1hcmdpbi10b3A6IDVweDtcbiAgYm94LXNoYWRvdzogMCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xOCk7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBvdmVyZmxvdy15OiBoaWRkZW47XG59XG5cbi50ZXh0IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgY29sb3I6IHdoaXRlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDUwJTtcbiAgdG9wOiA1MCU7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpIHRyYW5zbGF0ZVgoLTUwJSk7XG59XG5cbi5jYXRlZ29yeUJveCB7XG4gIGZvbnQtd2VpZ2h0OiA5MDA7XG4gIGZvbnQtc2l6ZTogMThwdDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDIyJTtcbiAgbGluZS1oZWlnaHQ6IDE7XG59Il19 */\";","import {Component, OnInit} from '@angular/core';\r\nimport {NavController, Platform, PopoverController} from '@ionic/angular';\r\nimport {Listing} from '../../entities/myListing/listing';\r\nimport {GlobalFields} from '../../GlobalFields';\r\nimport {StatusBar} from '@ionic-native/status-bar/ngx';\r\n\r\nimport {ModalController} from '@ionic/angular';\r\nimport {CallNumber} from '@ionic-native/call-number/ngx';\r\nimport {LaunchNavigator} from '@ionic-native/launch-navigator/ngx';\r\nimport {Service} from '../../services/Service';\r\n\r\nimport {SocialSharing} from '@ionic-native/social-sharing/ngx';\r\n\r\n\r\nimport 'hammerjs';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\nimport {ListingCategory} from '../../entities/listingCategory';\r\nimport {LocationService} from '../../services/LocationService';\r\nimport {ImageAttribute} from 'ionic-image-loader';\r\nimport {ListingTypeDetail} from '../../entities/myListing/listingTypeDetail';\r\nimport {GlobalFieldsMyListing} from '../../GlobalFieldsMyListing';\r\nimport {MyListingService} from '../../services/MyListingService';\r\n\r\n@Component({\r\n  selector: 'categoriesList',\r\n  templateUrl: 'categoriesList.html',\r\n  styleUrls: ['categoriesList.scss']\r\n\r\n})\r\nexport class CategoriesList implements OnInit{\r\n\r\n  GlobalFields = GlobalFields;\r\n  GlobalFieldsMyListing = GlobalFieldsMyListing;\r\n\r\n  tabShown = 1;\r\n\r\n  loading = true;\r\n  listOfTypes: ListingTypeDetail[] = [];\r\n\r\n\r\n  categories_by_type: { type_id: number, type_name: string, categories: ListingCategory[]}[] = [];\r\n  regions_by_type: { type_id: number, type_name: string, regions: ListingCategory[]}[] = [];\r\n\r\n  constructor(public service: Service, public mlservice: MyListingService, private _sanitizer: DomSanitizer, public translate: TranslateService,\r\n              private locationService: LocationService, private navController: NavController) {\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.getCategoriesForEachType();\r\n    this.getRegionsForEachType();\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    if(GlobalFields.site_details.categoryListTabContent == 1)\r\n      this.tabShown = 1;\r\n    else if(GlobalFields.site_details.categoryListTabContent == 2)\r\n      this.tabShown = 2;\r\n    else\r\n      this.tabShown = 1;\r\n    console.log('ionViewDidEnter');\r\n    this.service.setWhiteBlackBackgroundStatusBar();\r\n  }\r\n\r\n\r\n  getListingsByCategory(selectedCat: ListingCategory, typeId: any) {\r\n    GlobalFieldsMyListing.clearFilters();\r\n\r\n    if (selectedCat) {\r\n      GlobalFieldsMyListing.filtersSearch.categories = [selectedCat.name];\r\n      GlobalFieldsMyListing.filtersSearch.selectedType = typeId;\r\n      // select Listing_LP Type\r\n      GlobalFieldsMyListing.selectListingTypeDetail();\r\n\r\n      GlobalFieldsMyListing.getFilteredListingFirstTime(this.mlservice, this.locationService, true);\r\n      this.navController.navigateForward('tabs/' + GlobalFields.site_details.themeEnabled + '/search');\r\n    }\r\n  }\r\n\r\n  getCategoriesForEachType() {\r\n\r\n    this.loading = true;\r\n\r\n    this.mlservice.getCountByTaxonomy('job_listing_category').subscribe((res: any) => {\r\n      if (res && res.success && res.data && res.data.length>0) {\r\n        res.data.forEach( type =>{\r\n          this.categories_by_type.push({type_id: type.id, type_name: type.title, categories: type.terms});\r\n        });\r\n\r\n        this.loading = false;\r\n      }\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n/*\r\n\r\n    GlobalFieldsMyListing.listingTypesDetails.forEach(type => {\r\n      //check if regions in in the search filter\r\n      if(type.categories && type.categories.length>0) {\r\n        const cats = type.categories.filter(cat => cat.count)\r\n        this.categories_by_type.push({type_id: type.ID, type_name: type.post_title, categories: cats});\r\n      }\r\n    })*/\r\n  }\r\n\r\n  getRegionsForEachType() {\r\n\r\n    this.loading = true;\r\n    this.mlservice.getCountByTaxonomy('region').subscribe((res: any) => {\r\n      if (res && res.success && res.data && res.data.length>0) {\r\n        res.data.forEach( type =>{\r\n          this.regions_by_type.push({type_id: type.id, type_name: type.title, regions: type.terms});\r\n        });\r\n\r\n        this.loading = false;\r\n      }\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n\r\n/*\r\n    GlobalFieldsMyListing.listingTypesDetails.forEach(type => {\r\n      //check if regions in in the search filter\r\n      if (type.case27_listing_type_search_page && type.case27_listing_type_search_page.advanced\r\n        && type.case27_listing_type_search_page.advanced.facets && type.case27_listing_type_search_page.advanced.facets &&\r\n        type.case27_listing_type_search_page.advanced.facets.some(el => el.show_field == 'region')) {\r\n        this.mlservice.getRegionsByType(type.ID).subscribe((data: { success?: boolean, data?: ListingCategory[] }) => {\r\n          if (data.success)\r\n            data.data = data.data.filter(reg=> reg.count)\r\n            this.regions_by_type.push({type_id: type.ID, type_name: type.post_title, regions: data.data});\r\n        });\r\n      }\r\n    });*/\r\n  }\r\n\r\n  getListingsByRegion(selectedReg: ListingCategory, typeId: any) {\r\n    GlobalFieldsMyListing.clearFilters();\r\n    if (selectedReg) {\r\n      console.log(selectedReg)\r\n      GlobalFieldsMyListing.filtersSearch.region = selectedReg.name;\r\n      GlobalFieldsMyListing.filtersSearch.selectedType = typeId;\r\n      // select Listing_LP Type\r\n      GlobalFieldsMyListing.selectListingTypeDetail();\r\n\r\n      GlobalFieldsMyListing.getFilteredListingFirstTime(this.mlservice, this.locationService, true);\r\n      this.navController.navigateForward('tabs/' + GlobalFields.site_details.themeEnabled + '/search');\r\n    }\r\n  }\r\n\r\n\r\n  getBackground(category: any) {\r\n    let image = '';\r\n    //get the category from the categories call\r\n    GlobalFieldsMyListing.listingCategories.forEach(cat => {\r\n      if (cat.id == category.id)\r\n        image = cat.image_url;\r\n    });\r\n    return this._sanitizer.bypassSecurityTrustStyle(`linear-gradient(to top, rgba(23, 23, 23, 0.38), rgba(23, 23, 23, 0.38)), url(${image})`);\r\n  }\r\n\r\n  getBackgroundCached(category: ListingCategory) {\r\n    let image = '';\r\n    //get the category from the categories call\r\n    if(category.image_url)\r\n      image = category.image_url;\r\n    if (!image)\r\n      image = GlobalFields.site_details.placeholderImgUrl;\r\n    return image;\r\n  }\r\n\r\n  getBackgroundCachedRegions(reg: ListingCategory) {\r\n    if (reg.image_url)\r\n      return reg.image_url;\r\n    return GlobalFields.site_details.placeholderImgUrl;\r\n  }\r\n\r\n  getImgCachedClass(class_to_add: string): ImageAttribute[] {\r\n    let class_name = 'imgCachedAsBackground ' + class_to_add;\r\n\r\n    const imageAttributes: ImageAttribute[] = [];\r\n    imageAttributes.push({\r\n      element: 'class',\r\n      value: class_name\r\n    });\r\n\r\n\r\n    return imageAttributes;\r\n  }\r\n\r\n}\r\n"]}
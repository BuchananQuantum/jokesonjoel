{"version":3,"sources":["webpack:///src/app/MyListing/categoriesList/categoriesList.html","webpack:///src/app/MyListing/categoriesList/categoriesList.module.ts","webpack:///src/app/MyListing/categoriesList/categoriesList.scss","webpack:///src/app/MyListing/categoriesList/categoriesList.ts"],"names":["CategoriesListModule","imports","forChild","path","component","declarations","CategoriesList","service","mlservice","_sanitizer","translate","locationService","navController","GlobalFields","GlobalFieldsMyListing","tabShown","loading","listOfTypes","categories_by_type","regions_by_type","getCategoriesForEachType","getRegionsForEachType","site_details","categoryListTabContent","console","log","setWhiteBlackBackgroundStatusBar","selectedCat","typeId","clearFilters","filtersSearch","categories","name","selectedType","selectListingTypeDetail","getFilteredListingFirstTime","navigateForward","themeEnabled","getCountByTaxonomy","subscribe","res","success","data","length","forEach","type","push","type_id","id","type_name","title","terms","err","regions","selectedReg","region","category","image","listingCategories","cat","image_url","bypassSecurityTrustStyle","placeholderImgUrl","reg","class_to_add","class_name","imageAttributes","element","value","selector","template"],"mappings":"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","file":"MyListing-categoriesList-categoriesList-module-es5.js","sourcesContent":["export default \"\\n<ion-header translucent=\\\"true\\\" dir=\\\"{{GlobalFields.getLanguageLayout()}}\\\">\\n    <ion-toolbar>\\n      <!-- If Side menu is used-->\\n      <ion-buttons *ngIf=\\\"GlobalFields.site_details.navigationType==2\\\" slot=\\\"start\\\" style=\\\"position: absolute;\\\">\\n        <ion-menu-button style=\\\"color: #3b3c3c\\\"></ion-menu-button>\\n      </ion-buttons>\\n      <ion-segment *ngIf=\\\"!GlobalFields.site_details.categoryListTabContent || GlobalFields.site_details.categoryListTabContent == 3\\\" [(ngModel)]=\\\"tabShown\\\" style=\\\"width: 50%; min-width: fit-content; margin: auto;\\\">\\n          <ion-segment-button value=\\\"1\\\">\\n              <ion-label>{{'CATEGORIES' | translate}}</ion-label>\\n          </ion-segment-button>\\n          <ion-segment-button value=\\\"2\\\">\\n              <ion-label>{{'REGIONS' | translate}}</ion-label>\\n          </ion-segment-button>\\n      </ion-segment>\\n      <ion-title *ngIf=\\\"GlobalFields.site_details.categoryListTabContent ==1 || GlobalFields.site_details.categoryListTabContent == 2\\\">\\n        <span *ngIf=\\\"GlobalFields.site_details.categoryListTabContent == 1\\\">{{'CATEGORIES' | translate}}</span>\\n        <span *ngIf=\\\"GlobalFields.site_details.categoryListTabContent == 2\\\">{{'REGIONS' | translate}}</span>\\n      </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n\\n<!-- Categories -->\\n<ion-content class=\\\"cards-bg social-cards\\\" *ngIf=\\\"tabShown==1 && GlobalFieldsMyListing.listingCategories\\\" style=\\\"margin-top: 20px;\\\"\\n             [ngStyle]=\\\"GlobalFields.getBodyColorBackgroundJson()\\\" dir=\\\"{{GlobalFields.getLanguageLayout()}}\\\">\\n\\n\\n\\n\\n  <!-- Loading animation-->\\n  <div *ngIf=\\\"loading\\\">\\n    <ion-list>\\n      <ion-list-header>\\n        <ion-label><ion-skeleton-text animated style=\\\"width: 50%\\\"></ion-skeleton-text></ion-label>\\n      </ion-list-header>\\n      <ion-item *ngFor=\\\"let item of [1,2,3,4,5,6,7,8,9,10]\\\">\\n        <ion-avatar slot=\\\"start\\\">\\n          <ion-skeleton-text animated></ion-skeleton-text>\\n        </ion-avatar>\\n        <ion-label>\\n          <ion-skeleton-text animated style=\\\"width: 80%\\\"></ion-skeleton-text>\\n          <ion-skeleton-text animated style=\\\"width: 50%\\\"></ion-skeleton-text>\\n        </ion-label>\\n      </ion-item>\\n    </ion-list>\\n  </div>\\n\\n    <div *ngFor=\\\"let type of categories_by_type\\\" style=\\\"width: 100%; padding: 15px;\\\">\\n        <h3 *ngIf=\\\"type.categories && type.categories.length>0\\\">{{type.type_name}}</h3>\\n      <span *ngFor=\\\"let cat of type.categories\\\">\\n        <ion-row *ngIf=\\\"cat.count\\\"  style=\\\"width: 100%; height: 130px;\\\"\\n                 (click)=\\\"getListingsByCategory(cat, type.type_id)\\\">\\n            <ion-col style=\\\"text-align: center\\\">\\n                <!--<div class=\\\"backImg\\\" [style.background]=\\\"getBackground(cat)\\\">-->\\n                <div class=\\\"backImg\\\">\\n                    <img-loader [src]=\\\"getBackgroundCached(cat)\\\" useImg\\n                                [imgAttributes]=\\\"getImgCachedClass('shadedImgCached categoryImgCached')\\\"></img-loader>\\n\\n                    <div class=\\\"text\\\">\\n                        <span class=\\\"categoryBox\\\">{{cat.name}}</span>\\n                        <br>\\n                        <span style=\\\"position: relative; top: 24%;\\\">{{cat.count}} {{'LISTINGS' | translate}}</span>\\n                    </div>\\n                </div>\\n            </ion-col>\\n        </ion-row>\\n      </span>\\n    </div>\\n\\n</ion-content>\\n\\n<!-- Regions -->\\n<ion-content class=\\\"cards-bg social-cards\\\" *ngIf=\\\"tabShown==2 && GlobalFieldsMyListing.regions\\\" style=\\\"margin-top: 20px;\\\"\\n             [ngStyle]=\\\"GlobalFields.getBodyColorBackgroundJson()\\\" dir=\\\"{{GlobalFields.getLanguageLayout()}}\\\">\\n\\n\\n    <div style=\\\"width: 100%; padding: 15px;\\\" *ngIf=\\\"regions_by_type && regions_by_type.length>0\\\">\\n      <div *ngFor=\\\"let type of regions_by_type\\\">\\n        <h3 *ngIf=\\\"type.regions && type.regions.length>0\\\">{{type.type_name}}</h3>\\n        <span *ngFor=\\\"let reg of type.regions\\\">\\n          <ion-row *ngIf=\\\"reg.count\\\" style=\\\"width: 100%; height: 130px;\\\"\\n                   (click)=\\\"getListingsByRegion(reg, type.type_id)\\\">\\n              <ion-col style=\\\"text-align: center\\\">\\n                  <!--<div class=\\\"backImg\\\" [style.background]=\\\"getBackground(cat)\\\">-->\\n                  <div class=\\\"backImg\\\">\\n                      <img-loader [src]=\\\"getBackgroundCachedRegions(reg)\\\" useImg\\n                                  [imgAttributes]=\\\"getImgCachedClass('shadedImgCached categoryImgCached')\\\"></img-loader>\\n                      <div class=\\\"text\\\">\\n                          <span class=\\\"categoryBox\\\">{{reg.name}}</span>\\n                          <br>\\n                          <span style=\\\"position: relative; top: 24%;\\\">{{reg.count}} {{'LISTINGS' | translate}}</span>\\n                      </div>\\n                  </div>\\n              </ion-col>\\n          </ion-row>\\n        </span>\\n      </div>\\n\\n    </div>\\n\\n</ion-content>\\n\";","import { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport {NgModule} from \"@angular/core\";\nimport {SharedModule} from '../../shared.module';\nimport {CategoriesList} from './categoriesList';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SharedModule,\n        RouterModule.forChild([\n            {\n                path: '',\n                component: CategoriesList\n            }\n        ])\n    ],\n    declarations: [CategoriesList]\n})\nexport class CategoriesListModule {}\n","export default \".backImg {\\n  height: 110px;\\n  width: 100%;\\n  background-position: center !important;\\n  background-size: cover !important;\\n  border-radius: 5px;\\n  -webkit-box-shadow: 0 4px 8px rgba(0, 0, 0, 0.18);\\n  margin-bottom: 5px;\\n  margin-top: 5px;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.18);\\n  display: inline-flex;\\n  background-color: black;\\n  position: relative;\\n  overflow: hidden;\\n  overflow-y: hidden;\\n}\\n\\n.text {\\n  text-align: center;\\n  width: 100%;\\n  color: white;\\n  position: absolute;\\n  left: 50%;\\n  top: 50%;\\n  -webkit-transform: translateY(-50%) translateX(-50%);\\n}\\n\\n.categoryBox {\\n  font-weight: 900;\\n  font-size: 18pt;\\n  position: relative;\\n  top: 22%;\\n  line-height: 1;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvTXlMaXN0aW5nL2NhdGVnb3JpZXNMaXN0L0M6XFxsaXN0XFxpb25pY1xcaW9uaWMtYXBwL3NyY1xcYXBwXFxNeUxpc3RpbmdcXGNhdGVnb3JpZXNMaXN0XFxjYXRlZ29yaWVzTGlzdC5zY3NzIiwic3JjL2FwcC9NeUxpc3RpbmcvY2F0ZWdvcmllc0xpc3QvY2F0ZWdvcmllc0xpc3Quc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxXQUFBO0VBQ0Esc0NBQUE7RUFDQSxpQ0FBQTtFQUNBLGtCQUFBO0VBQ0EsaURBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSx5Q0FBQTtFQUNBLG9CQUFBO0VBQ0EsdUJBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7QUNDRjs7QURFQTtFQUNFLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxRQUFBO0VBQ0Esb0RBQUE7QUNDRjs7QURFQTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0VBQ0EsUUFBQTtFQUNBLGNBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL015TGlzdGluZy9jYXRlZ29yaWVzTGlzdC9jYXRlZ29yaWVzTGlzdC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJhY2tJbWd7XG4gIGhlaWdodDogMTEwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlciAhaW1wb3J0YW50O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogMCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xOCk7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbiAgbWFyZ2luLXRvcDogNXB4O1xuICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjE4KTtcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG92ZXJmbG93LXk6IGhpZGRlbjtcbn1cblxuLnRleHR7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiA1MCU7XG4gIHRvcDogNTAlO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSB0cmFuc2xhdGVYKC01MCUpO1xufVxuXG4uY2F0ZWdvcnlCb3h7XG4gIGZvbnQtd2VpZ2h0OiA5MDA7XG4gIGZvbnQtc2l6ZTogMThwdDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDIyJTtcbiAgbGluZS1oZWlnaHQ6IDE7XG59XG4iLCIuYmFja0ltZyB7XG4gIGhlaWdodDogMTEwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlciAhaW1wb3J0YW50O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogMCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xOCk7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbiAgbWFyZ2luLXRvcDogNXB4O1xuICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjE4KTtcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG92ZXJmbG93LXk6IGhpZGRlbjtcbn1cblxuLnRleHQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBjb2xvcjogd2hpdGU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogNTAlO1xuICB0b3A6IDUwJTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSkgdHJhbnNsYXRlWCgtNTAlKTtcbn1cblxuLmNhdGVnb3J5Qm94IHtcbiAgZm9udC13ZWlnaHQ6IDkwMDtcbiAgZm9udC1zaXplOiAxOHB0O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogMjIlO1xuICBsaW5lLWhlaWdodDogMTtcbn0iXX0= */\";","import {Component, OnInit} from '@angular/core';\nimport {NavController, Platform, PopoverController} from '@ionic/angular';\nimport {Listing} from '../../entities/myListing/listing';\nimport {GlobalFields} from '../../GlobalFields';\nimport {StatusBar} from '@ionic-native/status-bar/ngx';\n\nimport {ModalController} from '@ionic/angular';\nimport {CallNumber} from '@ionic-native/call-number/ngx';\nimport {LaunchNavigator} from '@ionic-native/launch-navigator/ngx';\nimport {Service} from '../../services/Service';\n\nimport {SocialSharing} from '@ionic-native/social-sharing/ngx';\n\n\nimport 'hammerjs';\nimport {TranslateService} from '@ngx-translate/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {ListingCategory} from '../../entities/listingCategory';\nimport {LocationService} from '../../services/LocationService';\nimport {ImageAttribute} from 'ionic-image-loader';\nimport {ListingTypeDetail} from '../../entities/myListing/listingTypeDetail';\nimport {GlobalFieldsMyListing} from '../../GlobalFieldsMyListing';\nimport {MyListingService} from '../../services/MyListingService';\n\n@Component({\n  selector: 'categoriesList',\n  templateUrl: 'categoriesList.html',\n  styleUrls: ['categoriesList.scss']\n\n})\nexport class CategoriesList implements OnInit{\n\n  GlobalFields = GlobalFields;\n  GlobalFieldsMyListing = GlobalFieldsMyListing;\n\n  tabShown = 1;\n\n  loading = true;\n  listOfTypes: ListingTypeDetail[] = [];\n\n\n  categories_by_type: { type_id: number, type_name: string, categories: ListingCategory[]}[] = [];\n  regions_by_type: { type_id: number, type_name: string, regions: ListingCategory[]}[] = [];\n\n  constructor(public service: Service, public mlservice: MyListingService, private _sanitizer: DomSanitizer, public translate: TranslateService,\n              private locationService: LocationService, private navController: NavController) {\n  }\n\n  ngOnInit(){\n    this.getCategoriesForEachType();\n    this.getRegionsForEachType();\n  }\n\n  ionViewDidEnter() {\n    if(GlobalFields.site_details.categoryListTabContent == 1)\n      this.tabShown = 1;\n    else if(GlobalFields.site_details.categoryListTabContent == 2)\n      this.tabShown = 2;\n    else\n      this.tabShown = 1;\n    console.log('ionViewDidEnter');\n    this.service.setWhiteBlackBackgroundStatusBar();\n  }\n\n\n  getListingsByCategory(selectedCat: ListingCategory, typeId: any) {\n    GlobalFieldsMyListing.clearFilters();\n\n    if (selectedCat) {\n      GlobalFieldsMyListing.filtersSearch.categories = [selectedCat.name];\n      GlobalFieldsMyListing.filtersSearch.selectedType = typeId;\n      // select Listing_LP Type\n      GlobalFieldsMyListing.selectListingTypeDetail();\n\n      GlobalFieldsMyListing.getFilteredListingFirstTime(this.mlservice, this.locationService, true);\n      this.navController.navigateForward('tabs/' + GlobalFields.site_details.themeEnabled + '/search');\n    }\n  }\n\n  getCategoriesForEachType() {\n\n    this.loading = true;\n\n    this.mlservice.getCountByTaxonomy('job_listing_category').subscribe((res: any) => {\n      if (res && res.success && res.data && res.data.length>0) {\n        res.data.forEach( type =>{\n          this.categories_by_type.push({type_id: type.id, type_name: type.title, categories: type.terms});\n        });\n\n        this.loading = false;\n      }\n    }, err => {\n      console.log(err);\n    });\n/*\n\n    GlobalFieldsMyListing.listingTypesDetails.forEach(type => {\n      //check if regions in in the search filter\n      if(type.categories && type.categories.length>0) {\n        const cats = type.categories.filter(cat => cat.count)\n        this.categories_by_type.push({type_id: type.ID, type_name: type.post_title, categories: cats});\n      }\n    })*/\n  }\n\n  getRegionsForEachType() {\n\n    this.loading = true;\n    this.mlservice.getCountByTaxonomy('region').subscribe((res: any) => {\n      if (res && res.success && res.data && res.data.length>0) {\n        res.data.forEach( type =>{\n          this.regions_by_type.push({type_id: type.id, type_name: type.title, regions: type.terms});\n        });\n\n        this.loading = false;\n      }\n    }, err => {\n      console.log(err);\n    });\n\n/*\n    GlobalFieldsMyListing.listingTypesDetails.forEach(type => {\n      //check if regions in in the search filter\n      if (type.case27_listing_type_search_page && type.case27_listing_type_search_page.advanced\n        && type.case27_listing_type_search_page.advanced.facets && type.case27_listing_type_search_page.advanced.facets &&\n        type.case27_listing_type_search_page.advanced.facets.some(el => el.show_field == 'region')) {\n        this.mlservice.getRegionsByType(type.ID).subscribe((data: { success?: boolean, data?: ListingCategory[] }) => {\n          if (data.success)\n            data.data = data.data.filter(reg=> reg.count)\n            this.regions_by_type.push({type_id: type.ID, type_name: type.post_title, regions: data.data});\n        });\n      }\n    });*/\n  }\n\n  getListingsByRegion(selectedReg: ListingCategory, typeId: any) {\n    GlobalFieldsMyListing.clearFilters();\n    if (selectedReg) {\n      console.log(selectedReg)\n      GlobalFieldsMyListing.filtersSearch.region = selectedReg.name;\n      GlobalFieldsMyListing.filtersSearch.selectedType = typeId;\n      // select Listing_LP Type\n      GlobalFieldsMyListing.selectListingTypeDetail();\n\n      GlobalFieldsMyListing.getFilteredListingFirstTime(this.mlservice, this.locationService, true);\n      this.navController.navigateForward('tabs/' + GlobalFields.site_details.themeEnabled + '/search');\n    }\n  }\n\n\n  getBackground(category: any) {\n    let image = '';\n    //get the category from the categories call\n    GlobalFieldsMyListing.listingCategories.forEach(cat => {\n      if (cat.id == category.id)\n        image = cat.image_url;\n    });\n    return this._sanitizer.bypassSecurityTrustStyle(`linear-gradient(to top, rgba(23, 23, 23, 0.38), rgba(23, 23, 23, 0.38)), url(${image})`);\n  }\n\n  getBackgroundCached(category: ListingCategory) {\n    let image = '';\n    //get the category from the categories call\n    if(category.image_url)\n      image = category.image_url;\n    if (!image)\n      image = GlobalFields.site_details.placeholderImgUrl;\n    return image;\n  }\n\n  getBackgroundCachedRegions(reg: ListingCategory) {\n    if (reg.image_url)\n      return reg.image_url;\n    return GlobalFields.site_details.placeholderImgUrl;\n  }\n\n  getImgCachedClass(class_to_add: string): ImageAttribute[] {\n    let class_name = 'imgCachedAsBackground ' + class_to_add;\n\n    const imageAttributes: ImageAttribute[] = [];\n    imageAttributes.push({\n      element: 'class',\n      value: class_name\n    });\n\n\n    return imageAttributes;\n  }\n\n}\n"]}